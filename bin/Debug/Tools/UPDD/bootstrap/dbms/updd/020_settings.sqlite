delete from updd_setting;

/*sep*/

alter table updd_setting add valid_values varchar null default null;

/*sep*/

alter table updd_setting add control_type varchar not null default 'label';

/*sep*/

alter table updd_setting add default_value varchar null default null;

/*sep*/

delete from updd_controller;

/*sep*/

delete from updd_connection;

/*sep*/

insert into updd_controller (id,name)
VALUES(1,'Goldfinger, HID, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (1,'private.id_bundle','303',0,0,'','','',''),
    (1,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (1,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (1,'controller_matching','1130;1650',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (1,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (1,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (1,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (1,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (1,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (1,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (1,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (1,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (1,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (1,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (1,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (1,'device_name','Goldfinger, IR, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (1,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (1,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (1,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (1,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (1,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (1,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (1,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (1,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (1,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (1,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (1,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (1,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (1,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (1,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (1,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (1,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (1,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (1,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (1,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (1,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (1,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (1,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (1,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (1,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (1,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (1,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (1,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (1,'legacy.xshift',NULL,0,0,'','','','none'),
    (1,'legacy.yshift',NULL,0,0,'','','','none'),
    (1,'legacy.1mask',NULL,0,0,'','','','none'),
    (1,'legacy.0mask',NULL,0,0,'','','','none'),
    (1,'legacy.xmask',NULL,0,0,'','','','none'),
    (1,'legacy.ymask',NULL,0,0,'','','','none'),
    (1,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (1,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (1,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (1,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (1,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (1,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (1,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (1,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (1,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (1,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (1,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (1,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (1,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (1,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (1,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (1,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (1,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (1,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (1,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (1,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (1,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (1,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (1,'legacy.invertmask',NULL,0,0,'','','','none'),
    (1,'legacy.tipshift',NULL,0,0,'','','','none'),
    (1,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (1,'legacy.tipmask',NULL,0,0,'','','','none'),
    (1,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (1,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (1,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (1,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (1,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (1,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (1,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (1,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (1,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (1,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (1,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (1,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (1,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (1,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (1,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (1,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (1,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (1,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (1,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (1,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (1,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (1,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (1,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (1,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (1,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (1,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (1,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (1,'calx2',NULL,1,1,'','','','none'),
    (1,'calx3',NULL,1,1,'','','','none'),
    (1,'caly2',NULL,1,1,'','','','none'),
    (1,'caly3',NULL,1,1,'','','','none'),
    (1,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (1,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (1,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (1,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (1,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (1,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (1,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (1,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (1,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (1,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (1,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (1,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (1,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (1,'usb.is_composite_device','0',1,0,'','','0','none'),
    (1,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (1,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (1,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (1,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (1,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (1,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (1,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (1,'legacy.stshift',NULL,1,0,'','','','none'),
    (1,'legacy.stmask',NULL,1,0,'','','','none'),
    (1,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (1,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (1,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (1,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (1,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (1,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (1,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (1,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (1,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (1,'vendor_name','Tenx Technology ?',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (1,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (1,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (1,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (1,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (1,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (1,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (1,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (1,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (1,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (1,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (1,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (1,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (1,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (1,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (1,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (1,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (1,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (1,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (1,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (1,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (1,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (1,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (1,'_A',NULL,0,0,'','customisation=none','','none'),
    (1,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (1,'i2c.device_instance',NULL,0,0,'','','','none'),
    (1,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (1,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (1,'calx4',NULL,0,0,'','','','label'),
    (1,'calx5',NULL,0,0,'','','','label'),
    (1,'calx6',NULL,0,0,'','','','label'),
    (1,'calx7',NULL,0,0,'','','','label'),
    (1,'caly4',NULL,0,0,'','','','label'),
    (1,'caly5',NULL,0,0,'','','','label'),
    (1,'caly6',NULL,0,0,'','','','label'),
    (1,'caly7',NULL,0,0,'','','','label'),
    (1,'caly8',NULL,0,0,'','','','label'),
    (1,'calx8',NULL,0,0,'','','','label'),
    (1,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (1,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (1,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (1,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (1,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (1,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(2,'Ilitek, HID touch, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (2,'private.id_bundle','303',0,0,'','','',''),
    (2,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (2,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (2,'controller_matching','222A;1',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (2,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (2,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (2,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (2,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (2,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (2,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (2,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (2,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (2,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (2,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (2,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (2,'device_name','Goldfinger, PCAP ILITEK, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (2,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (2,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (2,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (2,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (2,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (2,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (2,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (2,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (2,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (2,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (2,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (2,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (2,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (2,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (2,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (2,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (2,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (2,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (2,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (2,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (2,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (2,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (2,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (2,'disable_remote_wakeup','1',1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (2,'macosx_match_all_pids','1',1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (2,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (2,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (2,'legacy.xshift',NULL,0,0,'','','','none'),
    (2,'legacy.yshift',NULL,0,0,'','','','none'),
    (2,'legacy.1mask',NULL,0,0,'','','','none'),
    (2,'legacy.0mask',NULL,0,0,'','','','none'),
    (2,'legacy.xmask',NULL,0,0,'','','','none'),
    (2,'legacy.ymask',NULL,0,0,'','','','none'),
    (2,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (2,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (2,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (2,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (2,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (2,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (2,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (2,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (2,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (2,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (2,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (2,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (2,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (2,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (2,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (2,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (2,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (2,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (2,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (2,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (2,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (2,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (2,'legacy.invertmask',NULL,0,0,'','','','none'),
    (2,'legacy.tipshift',NULL,0,0,'','','','none'),
    (2,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (2,'legacy.tipmask',NULL,0,0,'','','','none'),
    (2,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (2,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (2,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (2,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (2,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (2,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (2,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (2,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (2,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (2,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (2,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (2,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (2,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (2,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (2,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (2,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (2,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (2,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (2,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (2,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (2,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (2,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (2,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (2,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (2,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (2,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (2,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (2,'calx2',NULL,1,1,'','','','none'),
    (2,'calx3',NULL,1,1,'','','','none'),
    (2,'caly2',NULL,1,1,'','','','none'),
    (2,'caly3',NULL,1,1,'','','','none'),
    (2,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (2,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (2,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (2,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (2,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (2,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (2,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (2,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (2,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (2,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (2,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (2,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (2,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (2,'usb.is_composite_device','0',1,0,'','','0','none'),
    (2,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (2,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (2,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (2,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (2,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (2,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (2,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (2,'legacy.stshift',NULL,1,0,'','','','none'),
    (2,'legacy.stmask',NULL,1,0,'','','','none'),
    (2,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (2,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (2,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (2,'device_type','Touch device',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (2,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (2,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (2,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (2,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (2,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (2,'vendor_name','Ilitek',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (2,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (2,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (2,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (2,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (2,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (2,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (2,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (2,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (2,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (2,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (2,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (2,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (2,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (2,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (2,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (2,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (2,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (2,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (2,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (2,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (2,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (2,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (2,'_A',NULL,0,0,'','customisation=none','','none'),
    (2,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (2,'i2c.device_instance',NULL,0,0,'','','','none'),
    (2,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (2,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (2,'calx4',NULL,0,0,'','','','label'),
    (2,'calx5',NULL,0,0,'','','','label'),
    (2,'calx6',NULL,0,0,'','','','label'),
    (2,'calx7',NULL,0,0,'','','','label'),
    (2,'caly4',NULL,0,0,'','','','label'),
    (2,'caly5',NULL,0,0,'','','','label'),
    (2,'caly6',NULL,0,0,'','','','label'),
    (2,'caly7',NULL,0,0,'','','','label'),
    (2,'caly8',NULL,0,0,'','','','label'),
    (2,'calx8',NULL,0,0,'','','','label'),
    (2,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (2,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (2,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (2,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (2,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (2,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(3,'KeeTouch, Dual Touch, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (3,'private.id_bundle','303',0,0,'','','',''),
    (3,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (3,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (3,'controller_matching','1aad;f',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (3,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (3,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (3,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (3,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (3,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (3,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (3,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (3,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (3,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (3,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (3,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (3,'device_name','Goldfinger, IR_MT, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (3,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (3,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (3,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (3,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (3,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (3,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (3,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (3,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (3,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (3,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (3,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (3,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (3,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (3,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (3,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (3,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (3,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (3,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (3,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (3,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (3,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (3,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (3,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (3,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (3,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (3,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (3,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (3,'legacy.xshift',NULL,0,0,'','','','none'),
    (3,'legacy.yshift',NULL,0,0,'','','','none'),
    (3,'legacy.1mask',NULL,0,0,'','','','none'),
    (3,'legacy.0mask',NULL,0,0,'','','','none'),
    (3,'legacy.xmask',NULL,0,0,'','','','none'),
    (3,'legacy.ymask',NULL,0,0,'','','','none'),
    (3,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (3,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (3,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (3,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (3,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (3,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (3,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (3,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (3,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (3,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (3,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (3,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (3,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (3,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (3,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (3,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (3,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (3,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (3,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (3,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (3,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (3,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (3,'legacy.invertmask',NULL,0,0,'','','','none'),
    (3,'legacy.tipshift',NULL,0,0,'','','','none'),
    (3,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (3,'legacy.tipmask',NULL,0,0,'','','','none'),
    (3,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (3,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (3,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (3,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (3,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (3,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (3,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (3,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (3,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (3,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (3,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (3,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (3,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (3,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (3,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (3,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (3,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (3,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (3,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (3,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (3,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (3,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (3,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (3,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (3,'disable_set_alt0','1',0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (3,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (3,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (3,'calx2',NULL,1,1,'','','','none'),
    (3,'calx3',NULL,1,1,'','','','none'),
    (3,'caly2',NULL,1,1,'','','','none'),
    (3,'caly3',NULL,1,1,'','','','none'),
    (3,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (3,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (3,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (3,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (3,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (3,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (3,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (3,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (3,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (3,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (3,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (3,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (3,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (3,'usb.is_composite_device','0',1,0,'','','0','none'),
    (3,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (3,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (3,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (3,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (3,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (3,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (3,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (3,'legacy.stshift',NULL,1,0,'','','','none'),
    (3,'legacy.stmask',NULL,1,0,'','','','none'),
    (3,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (3,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (3,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (3,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (3,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (3,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (3,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (3,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (3,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (3,'vendor_name',NULL,1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (3,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (3,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (3,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (3,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (3,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (3,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (3,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (3,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (3,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (3,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (3,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (3,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (3,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (3,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (3,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (3,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (3,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (3,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (3,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (3,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (3,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (3,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (3,'_A',NULL,0,0,'','customisation=none','','none'),
    (3,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (3,'i2c.device_instance',NULL,0,0,'','','','none'),
    (3,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (3,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (3,'calx4',NULL,0,0,'','','','label'),
    (3,'calx5',NULL,0,0,'','','','label'),
    (3,'calx6',NULL,0,0,'','','','label'),
    (3,'calx7',NULL,0,0,'','','','label'),
    (3,'caly4',NULL,0,0,'','','','label'),
    (3,'caly5',NULL,0,0,'','','','label'),
    (3,'caly6',NULL,0,0,'','','','label'),
    (3,'caly7',NULL,0,0,'','','','label'),
    (3,'caly8',NULL,0,0,'','','','label'),
    (3,'calx8',NULL,0,0,'','','','label'),
    (3,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (3,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (3,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (3,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (3,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (3,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(4,'eGalax, Pcap 10 Touch, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (4,'private.id_bundle','303',0,0,'','','',''),
    (4,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (4,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (4,'controller_matching','EEF;C000',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (4,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (4,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (4,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (4,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (4,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (4,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (4,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (4,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (4,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (4,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (4,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (4,'device_name','Goldfinger, PCAP EGALAX, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (4,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (4,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (4,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (4,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (4,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (4,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (4,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (4,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (4,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (4,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (4,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (4,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (4,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (4,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (4,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (4,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (4,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (4,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (4,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (4,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (4,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (4,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (4,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (4,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (4,'macosx_match_all_pids','1',1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (4,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (4,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (4,'legacy.xshift',NULL,0,0,'','','','none'),
    (4,'legacy.yshift',NULL,0,0,'','','','none'),
    (4,'legacy.1mask',NULL,0,0,'','','','none'),
    (4,'legacy.0mask',NULL,0,0,'','','','none'),
    (4,'legacy.xmask',NULL,0,0,'','','','none'),
    (4,'legacy.ymask',NULL,0,0,'','','','none'),
    (4,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (4,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (4,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (4,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (4,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (4,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (4,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (4,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (4,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (4,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (4,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (4,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (4,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (4,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (4,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (4,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (4,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (4,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (4,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (4,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (4,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (4,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (4,'legacy.invertmask',NULL,0,0,'','','','none'),
    (4,'legacy.tipshift',NULL,0,0,'','','','none'),
    (4,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (4,'legacy.tipmask',NULL,0,0,'','','','none'),
    (4,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (4,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (4,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (4,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (4,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (4,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (4,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (4,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (4,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (4,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (4,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (4,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (4,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (4,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (4,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (4,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (4,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (4,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (4,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (4,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (4,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (4,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (4,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (4,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (4,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (4,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (4,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (4,'calx2',NULL,1,1,'','','','none'),
    (4,'calx3',NULL,1,1,'','','','none'),
    (4,'caly2',NULL,1,1,'','','','none'),
    (4,'caly3',NULL,1,1,'','','','none'),
    (4,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (4,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (4,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (4,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (4,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (4,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (4,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (4,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (4,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (4,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (4,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (4,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (4,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (4,'usb.is_composite_device','0',1,0,'','','0','none'),
    (4,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (4,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (4,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (4,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (4,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (4,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (4,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (4,'legacy.stshift',NULL,1,0,'','','','none'),
    (4,'legacy.stmask',NULL,1,0,'','','','none'),
    (4,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (4,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (4,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (4,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (4,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (4,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (4,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (4,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (4,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (4,'vendor_name','eGalax/EETI',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (4,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (4,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (4,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (4,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (4,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (4,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (4,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (4,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (4,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (4,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (4,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (4,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (4,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (4,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (4,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (4,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (4,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (4,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (4,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (4,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (4,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (4,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (4,'_A',NULL,0,0,'','customisation=none','','none'),
    (4,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (4,'i2c.device_instance',NULL,0,0,'','','','none'),
    (4,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (4,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (4,'calx4',NULL,0,0,'','','','label'),
    (4,'calx5',NULL,0,0,'','','','label'),
    (4,'calx6',NULL,0,0,'','','','label'),
    (4,'calx7',NULL,0,0,'','','','label'),
    (4,'caly4',NULL,0,0,'','','','label'),
    (4,'caly5',NULL,0,0,'','','','label'),
    (4,'caly6',NULL,0,0,'','','','label'),
    (4,'caly7',NULL,0,0,'','','','label'),
    (4,'caly8',NULL,0,0,'','','','label'),
    (4,'calx8',NULL,0,0,'','','','label'),
    (4,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (4,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (4,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (4,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (4,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (4,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(5,'Goldfinger, Serial');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (5,'private.id_bundle','303',0,0,'','','',''),
    (5,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (5,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (5,'controller_matching',NULL,0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (5,'usb_serial_required',NULL,1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (5,'usb_product_required',NULL,1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (5,'usb_endpoints',NULL,0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (5,'usb_timeout',NULL,1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (5,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (5,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (5,'calx1','1024',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (5,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (5,'caly1','1024',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (5,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (5,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (5,'device_name','Goldfinger, Serial',0,1,'A user friendly name for the device instance','','','lineedit'),
    (5,'hid.is_hid',NULL,1,0,'Identifies a device as an HID device','','','none'),
    (5,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (5,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (5,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (5,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (5,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (5,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (5,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (5,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (5,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (5,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (5,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (5,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (5,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (5,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (5,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (5,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (5,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (5,'usb_interfaces',NULL,0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (5,'hid.is_auto',NULL,1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (5,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (5,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (5,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (5,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (5,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (5,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (5,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (5,'legacy.xshift','FF 18 11 ',0,0,'','','','none'),
    (5,'legacy.yshift','FF FF FF 18 11 ',0,0,'','','','none'),
    (5,'legacy.1mask','98 00 00 00 00 ',0,0,'','','','none'),
    (5,'legacy.0mask','27 80 80 80 80 ',0,0,'','','','none'),
    (5,'legacy.xmask','00 7F 7F ',0,0,'','','','none'),
    (5,'legacy.ymask','00 00 00 7F 7F ',0,0,'','','','none'),
    (5,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (5,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (5,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (5,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (5,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (5,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (5,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (5,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (5,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (5,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (5,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (5,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (5,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (5,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (5,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (5,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (5,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (5,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (5,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (5,'liftoff_time_ms','500',1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (5,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (5,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (5,'legacy.invertmask',NULL,0,0,'','','','none'),
    (5,'legacy.tipshift','1E ',0,0,'','','','none'),
    (5,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (5,'legacy.tipmask','40 ',0,0,'','','','none'),
    (5,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (5,'liftoff_ignore_coordinates','1',1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (5,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (5,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (5,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (5,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (5,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (5,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (5,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (5,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (5,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (5,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (5,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (5,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (5,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (5,'port_type','serial',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (5,'rs232.macro',' ',0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (5,'rs232.baudrate','9600',1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (5,'rs232.databits','8',1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (5,'rs232.parity','0',1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (5,'rs232.port','COM1',0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (5,'rs232.stopbits','1',0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (5,'legacy.asciimode','0',1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (5,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (5,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (5,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (5,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (5,'calx2',NULL,1,1,'','','','none'),
    (5,'calx3',NULL,1,1,'','','','none'),
    (5,'caly2',NULL,1,1,'','','','none'),
    (5,'caly3',NULL,1,1,'','','','none'),
    (5,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (5,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (5,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (5,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (5,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (5,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (5,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (5,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (5,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (5,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (5,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (5,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (5,'legacy.packet_length','5',1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (5,'usb.is_composite_device',NULL,1,0,'','','0','none'),
    (5,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (5,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (5,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (5,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (5,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (5,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (5,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (5,'legacy.stshift',NULL,1,0,'','','','none'),
    (5,'legacy.stmask',NULL,1,0,'','','','none'),
    (5,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (5,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (5,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (5,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (5,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (5,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (5,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (5,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (5,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (5,'vendor_name',NULL,1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (5,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (5,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (5,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (5,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (5,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (5,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (5,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (5,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (5,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (5,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (5,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (5,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (5,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (5,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (5,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (5,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (5,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (5,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (5,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (5,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (5,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (5,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (5,'_A',NULL,0,0,'','customisation=none','','none'),
    (5,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (5,'i2c.device_instance',NULL,0,0,'','','','none'),
    (5,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (5,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (5,'calx4',NULL,0,0,'','','','label'),
    (5,'calx5',NULL,0,0,'','','','label'),
    (5,'calx6',NULL,0,0,'','','','label'),
    (5,'calx7',NULL,0,0,'','','','label'),
    (5,'caly4',NULL,0,0,'','','','label'),
    (5,'caly5',NULL,0,0,'','','','label'),
    (5,'caly6',NULL,0,0,'','','','label'),
    (5,'caly7',NULL,0,0,'','','','label'),
    (5,'caly8',NULL,0,0,'','','','label'),
    (5,'calx8',NULL,0,0,'','','','label'),
    (5,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (5,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (5,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (5,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (5,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (5,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(6,'CVTouch, FB Series, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (6,'private.id_bundle','303',0,0,'','','',''),
    (6,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (6,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (6,'controller_matching','1FF7;13',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (6,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (6,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (6,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (6,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (6,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (6,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (6,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (6,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (6,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (6,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (6,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (6,'device_name','Goldfinger, AIO IR Touch, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (6,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (6,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (6,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (6,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (6,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (6,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (6,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (6,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (6,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (6,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (6,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (6,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (6,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (6,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (6,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (6,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (6,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (6,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (6,'usb_interfaces','0,2',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (6,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (6,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (6,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (6,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (6,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (6,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (6,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (6,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (6,'legacy.xshift',NULL,0,0,'','','','none'),
    (6,'legacy.yshift',NULL,0,0,'','','','none'),
    (6,'legacy.1mask',NULL,0,0,'','','','none'),
    (6,'legacy.0mask',NULL,0,0,'','','','none'),
    (6,'legacy.xmask',NULL,0,0,'','','','none'),
    (6,'legacy.ymask',NULL,0,0,'','','','none'),
    (6,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (6,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (6,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (6,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (6,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (6,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (6,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (6,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (6,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (6,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (6,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (6,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (6,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (6,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (6,'hid.report_descriptor.a','** Interface 0

0x06 0x00 0xFF 0x09 0x00 0xA1 0x01 0x85 0xFD 0x06 0x00 0xFF 0x09 0x01 0x09 0x02 
0x09 0x03 0x09 0x04 0x09 0x05 0x09 0x06 0x15 0x00 0x26 0xFF 0x00 0x75 0x08 0x95 
0x06 0x81 0x02 0x85 0xFE 0x06 0x00 0xFF 0x09 0x01 0x09 0x02 0x09 0x03 0x09 0x04 
0x15 0x00 0x26 0xFF 0x00 0x75 0x08 0x95 0x04 0xB1 0x02 0xC0 0x05 0x01 0x09 0x02 
0xA1 0x01 0x09 0x01 0xA1 0x00 0x85 0x01 0x05 0x09 0x19 0x01 0x29 0x03 0x15 0x00 
0x25 0x01 0x95 0x03 0x75 0x01 0x81 0x02 0x95 0x01 0x75 0x05 0x81 0x03 0x05 0x01 
0x09 0x30 0x09 0x31 0x15 0x00 0x26 0xFF 0x7F 0x35 0x00 0x46 0xFF 0x7F 0x75 0x10 
0x95 0x02 0x81 0x02 0x05 0x0D 0x09 0x33 0x15 0x00 0x26 0xFF 0x00 0x35 0x00 0x46 
0xFF 0x00 0x75 0x08 0x95 0x01 0x81 0x02 0x05 0x01 0x09 0x38 0x15 0x81 0x25 0x7F 
0x35 0x81 0x45 0x7F 0x95 0x01 0x81 0x06 0xC0 0xC0 0x06 0x00 0xFF 0x09 0x00 0xA1 
0x01 0x85 0xFC 0x15 0x00 0x26 0xFF 0x00 0x19 0x01 0x29 0x3F 0x75 0x08 0x95 0x3F 
0x81 0x02 0x19 0x01 0x29 0x3F 0x91 0x02 0xC0 0x06 0x00 0xFF 0x09 0x00 0xA1 0x01 
0x85 0xFB 0x15 0x00 0x26 0xFF 0x00 0x19 0x01 0x29 0x3F 0x75 0x08 0x95 0x3F 0x81 
0x02 0x19 0x01 0x29 0x3F 0x91 0x02 0xC0 0x05 0x0D 0x09 0x04 0xA1 0x01 0x85 0x02 
0x09 0x22 0xA1 0x02 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 
0x09 0x32 0x81 0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 
0x95 0x01 0x81 0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x00 0x65 
0x00 0x09 0x30 0x35 0x00 0x46 0x00 0x00 0x81 0x02 0x09 0x31 0x81 0x02 0xC0 0xA1 
0x02 0x05 0x0D 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 
0x32 0x81 0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 
0x01 0x81 0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x00 0x65 0x00 
0x09 0x30 0x35 0x00 0x46 0x00 0x00 0x81 0x02 0x09 0x31 0x81 0x02 0xC0 0xA1 0x02 
0x05 0x0D 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 
0x81 0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 
0x81 0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x00 0x65 0x00 0x09 
0x30 0x35 0x00 0x46 0x00 0x00 0x81 0x02 0x09 0x31 0x81 0x02 0xC0 0xA1 0x02 0x05 
0x0D 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 0x81 
0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 0x81 
0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x00 0x65 0x00 0x09 0x30 
0x35 0x00 0x46 0x00 0x00 0x81 0x02 0x09 0x31 0x81 0x02 0xC0 0xA1 0x02 0x05 0x0D 
0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 
0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 
0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x00 0x65 0x00 0x09 0x30 0x35 
0x00 0x46 0x00 0x00 0x81 0x02 0x09 0x31 0x81 0x02 0xC0 0xA1 0x02 0x05 0x0D 0x09 
0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 0x09 
0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 0x05 
0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x00 0x65 0x00 0x09 0x30 0x35 0x00 
0x46 0x00 0x00 0x81 0x02 0x09 0x31 0x81 0x02 0xC0 0x05 0x0D 0x09 0x54 0x15 0x00 
0x26 0xFF 0x00 0x95 0x01 0x75 0x08 0x81 0x02 0x85 0x03 0x09 0x55 0x15 0x00 0x25 
0x80 0xB1 0x02 0xC0 0x09 0x0E 0xA1 0x01 0x85 0x04 0x09 0x23 0xA1 0x02 0x09 0x52 
0x09 0x53 0x15 0x00 0x25 0x0A 0x75 0x08 0x95 0x02 0xB1 0x02 0xC0 0xC0
',0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (6,'hid.report_descriptor.b','** Interface 0

0x06 0x00 0xFF 0x09 0x00 0xA1 0x01 0x85 0xFD 0x06 0x00 0xFF 0x09 0x01 0x09 0x02 
0x09 0x03 0x09 0x04 0x09 0x05 0x09 0x06 0x15 0x00 0x26 0xFF 0x00 0x75 0x08 0x95 
0x06 0x81 0x02 0x85 0xFE 0x06 0x00 0xFF 0x09 0x01 0x09 0x02 0x09 0x03 0x09 0x04 
0x15 0x00 0x26 0xFF 0x00 0x75 0x08 0x95 0x04 0xB1 0x02 0xC0 0x05 0x01 0x09 0x02 
0xA1 0x01 0x09 0x01 0xA1 0x00 0x85 0x01 0x05 0x09 0x19 0x01 0x29 0x03 0x15 0x00 
0x25 0x01 0x95 0x03 0x75 0x01 0x81 0x02 0x95 0x01 0x75 0x05 0x81 0x03 0x05 0x01 
0x09 0x30 0x09 0x31 0x15 0x00 0x26 0xFF 0x7F 0x35 0x00 0x46 0xFF 0x7F 0x75 0x10 
0x95 0x02 0x81 0x02 0x05 0x0D 0x09 0x33 0x15 0x00 0x26 0xFF 0x00 0x35 0x00 0x46 
0xFF 0x00 0x75 0x08 0x95 0x01 0x81 0x02 0x05 0x01 0x09 0x38 0x15 0x81 0x25 0x7F 
0x35 0x81 0x45 0x7F 0x95 0x01 0x81 0x06 0xC0 0xC0 0x06 0x00 0xFF 0x09 0x00 0xA1 
0x01 0x85 0xFC 0x15 0x00 0x26 0xFF 0x00 0x09 0x01 0x75 0x08 0x95 0x3F 0x81 0x02 
0x09 0x01 0x91 0x02 0xC0 0x06 0x00 0xFF 0x09 0x00 0xA1 0x01 0x85 0xFB 0x15 0x00 
0x26 0xFF 0x00 0x09 0x01 0x75 0x08 0x95 0x3F 0x81 0x02 0x09 0x01 0x91 0x02 0xC0 
0x05 0x0D 0x09 0x04 0xA1 0x01 0x85 0x02 0x09 0x22 0xA1 0x02 0x09 0x42 0x15 0x00 
0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 0x09 0x47 0x81 0x02 
0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 0x05 0x01 0x15 0x00 
0x26 0xFF 0x7F 0x75 0x10 0x55 0x0E 0x65 0x11 0x09 0x30 0x35 0x00 0x46 0xE0 0x15 
0x81 0x02 0x46 0x67 0x0C 0x09 0x31 0x81 0x02 0x05 0x0D 0x09 0x48 0x81 0x02 0x09 
0x49 0x81 0x02 0xC0 0xA1 0x02 0x05 0x0D 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 
0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 
0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 
0x10 0x55 0x0E 0x65 0x11 0x09 0x30 0x35 0x00 0x46 0xE0 0x15 0x81 0x02 0x46 0x67 
0x0C 0x09 0x31 0x81 0x02 0x05 0x0D 0x09 0x48 0x81 0x02 0x09 0x49 0x81 0x02 0xC0 
0xA1 0x02 0x05 0x0D 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 
0x09 0x32 0x81 0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 
0x95 0x01 0x81 0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x0E 0x65 
0x11 0x09 0x30 0x35 0x00 0x46 0xE0 0x15 0x81 0x02 0x46 0x67 0x0C 0x09 0x31 0x81 
0x02 0x05 0x0D 0x09 0x48 0x81 0x02 0x09 0x49 0x81 0x02 0xC0 0xA1 0x02 0x05 0x0D 
0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 
0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 
0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 0x10 0x55 0x0E 0x65 0x11 0x09 0x30 0x35 
0x00 0x46 0xE0 0x15 0x81 0x02 0x46 0x67 0x0C 0x09 0x31 0x81 0x02 0x05 0x0D 0x09 
0x48 0x81 0x02 0x09 0x49 0x81 0x02 0xC0 0xA1 0x02 0x05 0x0D 0x09 0x42 0x15 0x00 
0x25 0x01 0x75 0x01 0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 0x09 0x47 0x81 0x02 
0x95 0x05 0x81 0x03 0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 0x05 0x01 0x15 0x00 
0x26 0xFF 0x7F 0x75 0x10 0x55 0x0E 0x65 0x11 0x09 0x30 0x35 0x00 0x46 0xE0 0x15 
0x81 0x02 0x46 0x67 0x0C 0x09 0x31 0x81 0x02 0x05 0x0D 0x09 0x48 0x81 0x02 0x09 
0x49 0x81 0x02 0xC0 0xA1 0x02 0x05 0x0D 0x09 0x42 0x15 0x00 0x25 0x01 0x75 0x01 
0x95 0x01 0x81 0x02 0x09 0x32 0x81 0x02 0x09 0x47 0x81 0x02 0x95 0x05 0x81 0x03 
0x75 0x08 0x09 0x51 0x95 0x01 0x81 0x02 0x05 0x01 0x15 0x00 0x26 0xFF 0x7F 0x75 
0x10 0x55 0x0E 0x65 0x11 0x09 0x30 0x35 0x00 0x46 0xE0 0x15 0x81 0x02 0x46 0x67 
0x0C 0x09 0x31 0x81 0x02 0x05 0x0D 0x09 0x48 0x81 0x02 0x09 0x49 0x81 0x02 0xC0 
0x05 0x0D 0x09 0x54 0x15 0x00 0x26 0xFF 0x00 0x95 0x01 0x75 0x08 0x81 0x02 0x85 
0x03 0x09 0x55 0x15 0x00 0x25 0x7F 0xB1 0x02 0xC0 0x09 0x0E 0xA1 0x01 0x85 0x04 
0x09 0x23 0xA1 0x02 0x09 0x52 0x09 0x53 0x15 0x00 0x25 0x0A 0x75 0x08 0x95 0x02 
0xB1 0x02 0xC0 0xC0 ',0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (6,'hid.report_descriptor.selected','a',0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (6,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (6,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (6,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (6,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (6,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (6,'legacy.invertmask',NULL,0,0,'','','','none'),
    (6,'legacy.tipshift',NULL,0,0,'','','','none'),
    (6,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (6,'legacy.tipmask',NULL,0,0,'','','','none'),
    (6,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (6,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (6,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (6,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (6,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (6,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (6,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (6,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (6,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (6,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (6,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (6,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (6,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (6,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (6,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (6,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (6,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (6,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (6,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (6,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (6,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (6,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (6,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (6,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (6,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (6,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (6,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (6,'calx2',NULL,1,1,'','','','none'),
    (6,'calx3',NULL,1,1,'','','','none'),
    (6,'caly2',NULL,1,1,'','','','none'),
    (6,'caly3',NULL,1,1,'','','','none'),
    (6,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (6,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (6,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (6,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (6,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (6,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (6,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (6,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (6,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (6,'hid.report_descriptor.selection_rule','ignore=FB;len=38,a;len=62,b',0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (6,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (6,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (6,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (6,'usb.is_composite_device','0',1,0,'','','0','none'),
    (6,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (6,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (6,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (6,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (6,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (6,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (6,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (6,'legacy.stshift',NULL,1,0,'','','','none'),
    (6,'legacy.stmask',NULL,1,0,'','','','none'),
    (6,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (6,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (6,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (6,'device_type','Touch device',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (6,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (6,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (6,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (6,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (6,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (6,'vendor_name','CVTouch/IRTouch',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (6,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (6,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (6,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (6,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (6,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (6,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (6,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (6,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (6,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (6,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (6,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (6,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (6,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (6,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (6,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (6,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (6,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (6,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (6,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (6,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (6,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (6,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (6,'_A',NULL,0,0,'','customisation=none','','none'),
    (6,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (6,'i2c.device_instance',NULL,0,0,'','','','none'),
    (6,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (6,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (6,'calx4',NULL,0,0,'','','','label'),
    (6,'calx5',NULL,0,0,'','','','label'),
    (6,'calx6',NULL,0,0,'','','','label'),
    (6,'calx7',NULL,0,0,'','','','label'),
    (6,'caly4',NULL,0,0,'','','','label'),
    (6,'caly5',NULL,0,0,'','','','label'),
    (6,'caly6',NULL,0,0,'','','','label'),
    (6,'caly7',NULL,0,0,'','','','label'),
    (6,'caly8',NULL,0,0,'','','','label'),
    (6,'calx8',NULL,0,0,'','','','label'),
    (6,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (6,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (6,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (6,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (6,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (6,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(7,'STMicroelectronics, Touch 5750, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (7,'private.id_bundle','303',0,0,'','','',''),
    (7,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (7,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (7,'controller_matching','483;5750',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (7,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (7,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (7,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (7,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (7,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (7,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (7,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (7,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (7,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (7,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (7,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (7,'device_name','Goldfinger, IR_STm, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (7,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (7,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (7,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (7,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (7,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (7,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (7,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (7,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (7,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (7,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (7,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (7,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (7,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (7,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (7,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (7,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (7,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (7,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (7,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (7,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (7,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (7,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (7,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (7,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (7,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (7,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (7,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (7,'legacy.xshift',NULL,0,0,'','','','none'),
    (7,'legacy.yshift',NULL,0,0,'','','','none'),
    (7,'legacy.1mask',NULL,0,0,'','','','none'),
    (7,'legacy.0mask',NULL,0,0,'','','','none'),
    (7,'legacy.xmask',NULL,0,0,'','','','none'),
    (7,'legacy.ymask',NULL,0,0,'','','','none'),
    (7,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (7,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (7,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (7,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (7,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (7,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (7,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (7,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (7,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (7,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (7,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (7,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (7,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (7,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (7,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (7,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (7,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (7,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (7,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (7,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (7,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (7,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (7,'legacy.invertmask',NULL,0,0,'','','','none'),
    (7,'legacy.tipshift',NULL,0,0,'','','','none'),
    (7,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (7,'legacy.tipmask',NULL,0,0,'','','','none'),
    (7,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (7,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (7,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (7,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (7,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (7,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (7,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (7,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (7,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (7,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (7,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (7,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (7,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (7,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (7,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (7,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (7,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (7,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (7,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (7,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (7,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (7,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (7,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (7,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (7,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (7,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (7,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (7,'calx2',NULL,1,1,'','','','none'),
    (7,'calx3',NULL,1,1,'','','','none'),
    (7,'caly2',NULL,1,1,'','','','none'),
    (7,'caly3',NULL,1,1,'','','','none'),
    (7,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (7,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (7,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (7,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (7,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (7,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (7,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (7,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (7,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (7,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (7,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (7,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (7,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (7,'usb.is_composite_device','0',1,0,'','','0','none'),
    (7,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (7,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (7,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (7,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (7,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (7,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (7,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (7,'legacy.stshift',NULL,1,0,'','','','none'),
    (7,'legacy.stmask',NULL,1,0,'','','','none'),
    (7,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (7,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (7,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (7,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (7,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (7,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (7,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (7,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (7,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (7,'vendor_name','BYQDtech',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (7,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (7,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (7,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (7,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (7,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (7,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (7,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (7,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (7,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (7,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (7,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (7,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (7,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (7,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (7,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (7,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (7,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (7,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (7,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (7,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (7,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (7,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (7,'_A',NULL,0,0,'','customisation=none','','none'),
    (7,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (7,'i2c.device_instance',NULL,0,0,'','','','none'),
    (7,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (7,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (7,'calx4',NULL,0,0,'','','','label'),
    (7,'calx5',NULL,0,0,'','','','label'),
    (7,'calx6',NULL,0,0,'','','','label'),
    (7,'calx7',NULL,0,0,'','','','label'),
    (7,'caly4',NULL,0,0,'','','','label'),
    (7,'caly5',NULL,0,0,'','','','label'),
    (7,'caly6',NULL,0,0,'','','','label'),
    (7,'caly7',NULL,0,0,'','','','label'),
    (7,'caly8',NULL,0,0,'','','','label'),
    (7,'calx8',NULL,0,0,'','','','label'),
    (7,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (7,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (7,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (7,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (7,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (7,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(8,'Goldfinger, IR_ST, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (8,'private.id_bundle','303',0,0,'','','',''),
    (8,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (8,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (8,'controller_matching','1aad;1',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (8,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (8,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (8,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (8,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (8,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (8,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (8,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (8,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (8,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (8,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (8,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (8,'device_name','Goldfinger, IR_ST, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (8,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (8,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (8,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (8,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (8,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (8,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (8,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (8,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (8,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (8,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (8,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (8,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (8,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (8,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (8,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (8,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (8,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (8,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (8,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (8,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (8,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (8,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (8,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (8,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (8,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (8,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (8,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (8,'legacy.xshift',NULL,0,0,'','','','none'),
    (8,'legacy.yshift',NULL,0,0,'','','','none'),
    (8,'legacy.1mask',NULL,0,0,'','','','none'),
    (8,'legacy.0mask',NULL,0,0,'','','','none'),
    (8,'legacy.xmask',NULL,0,0,'','','','none'),
    (8,'legacy.ymask',NULL,0,0,'','','','none'),
    (8,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (8,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (8,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (8,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (8,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (8,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (8,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (8,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (8,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (8,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (8,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (8,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (8,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (8,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (8,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (8,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (8,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (8,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (8,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (8,'liftoff_time_ms','0',1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (8,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (8,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (8,'legacy.invertmask',NULL,0,0,'','','','none'),
    (8,'legacy.tipshift',NULL,0,0,'','','','none'),
    (8,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (8,'legacy.tipmask',NULL,0,0,'','','','none'),
    (8,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (8,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (8,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (8,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (8,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (8,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (8,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (8,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (8,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (8,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (8,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (8,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (8,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (8,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (8,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (8,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (8,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (8,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (8,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (8,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (8,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (8,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (8,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (8,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (8,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (8,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (8,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (8,'calx2',NULL,1,1,'','','','none'),
    (8,'calx3',NULL,1,1,'','','','none'),
    (8,'caly2',NULL,1,1,'','','','none'),
    (8,'caly3',NULL,1,1,'','','','none'),
    (8,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (8,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (8,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (8,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (8,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (8,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (8,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (8,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (8,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (8,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (8,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (8,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (8,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (8,'usb.is_composite_device','0',1,0,'','','0','none'),
    (8,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (8,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (8,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (8,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (8,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (8,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (8,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (8,'legacy.stshift',NULL,1,0,'','','','none'),
    (8,'legacy.stmask',NULL,1,0,'','','','none'),
    (8,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (8,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (8,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (8,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (8,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (8,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (8,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (8,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (8,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (8,'vendor_name','KeeTouch',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (8,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (8,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (8,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (8,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (8,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (8,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (8,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (8,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (8,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (8,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (8,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (8,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (8,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (8,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (8,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (8,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (8,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (8,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (8,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (8,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (8,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (8,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (8,'_A',NULL,0,0,'','customisation=none','','none'),
    (8,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (8,'i2c.device_instance',NULL,0,0,'','','','none'),
    (8,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (8,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (8,'calx4',NULL,0,0,'','','','label'),
    (8,'calx5',NULL,0,0,'','','','label'),
    (8,'calx6',NULL,0,0,'','','','label'),
    (8,'calx7',NULL,0,0,'','','','label'),
    (8,'caly4',NULL,0,0,'','','','label'),
    (8,'caly5',NULL,0,0,'','','','label'),
    (8,'caly6',NULL,0,0,'','','','label'),
    (8,'caly7',NULL,0,0,'','','','label'),
    (8,'caly8',NULL,0,0,'','','','label'),
    (8,'calx8',NULL,0,0,'','','','label'),
    (8,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (8,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (8,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (8,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (8,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (8,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(9,'Silicon Works, SW4101C, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (9,'private.id_bundle','303',0,0,'','','',''),
    (9,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (9,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (9,'controller_matching','29bd;4101',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (9,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (9,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (9,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (9,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (9,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (9,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (9,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (9,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (9,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (9,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (9,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (9,'device_name','Goldfinger, PCAP SW, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (9,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (9,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (9,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (9,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (9,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (9,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (9,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (9,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (9,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (9,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (9,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (9,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (9,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (9,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (9,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (9,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (9,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (9,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (9,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (9,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (9,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (9,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (9,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (9,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (9,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (9,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (9,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (9,'legacy.xshift',NULL,0,0,'','','','none'),
    (9,'legacy.yshift',NULL,0,0,'','','','none'),
    (9,'legacy.1mask',NULL,0,0,'','','','none'),
    (9,'legacy.0mask',NULL,0,0,'','','','none'),
    (9,'legacy.xmask',NULL,0,0,'','','','none'),
    (9,'legacy.ymask',NULL,0,0,'','','','none'),
    (9,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (9,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (9,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (9,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (9,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (9,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (9,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (9,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (9,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (9,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (9,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (9,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (9,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (9,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (9,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (9,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (9,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (9,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (9,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (9,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (9,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (9,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (9,'legacy.invertmask',NULL,0,0,'','','','none'),
    (9,'legacy.tipshift',NULL,0,0,'','','','none'),
    (9,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (9,'legacy.tipmask',NULL,0,0,'','','','none'),
    (9,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (9,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (9,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (9,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (9,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (9,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (9,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (9,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (9,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (9,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (9,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (9,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (9,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (9,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (9,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (9,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (9,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (9,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (9,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (9,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (9,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (9,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (9,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (9,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (9,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (9,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (9,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (9,'calx2',NULL,1,1,'','','','none'),
    (9,'calx3',NULL,1,1,'','','','none'),
    (9,'caly2',NULL,1,1,'','','','none'),
    (9,'caly3',NULL,1,1,'','','','none'),
    (9,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (9,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (9,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (9,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (9,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (9,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (9,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (9,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (9,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (9,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (9,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (9,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (9,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (9,'usb.is_composite_device','0',1,0,'','','0','none'),
    (9,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (9,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (9,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (9,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (9,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (9,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (9,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (9,'legacy.stshift',NULL,1,0,'','','','none'),
    (9,'legacy.stmask',NULL,1,0,'','','','none'),
    (9,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (9,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (9,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (9,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (9,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (9,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (9,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (9,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (9,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (9,'vendor_name',NULL,1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (9,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (9,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (9,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (9,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (9,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (9,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (9,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (9,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (9,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (9,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (9,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (9,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (9,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (9,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (9,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (9,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (9,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (9,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (9,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (9,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (9,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (9,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (9,'_A',NULL,0,0,'','customisation=none','','none'),
    (9,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (9,'i2c.device_instance',NULL,0,0,'','','','none'),
    (9,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (9,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (9,'calx4',NULL,0,0,'','','','label'),
    (9,'calx5',NULL,0,0,'','','','label'),
    (9,'calx6',NULL,0,0,'','','','label'),
    (9,'calx7',NULL,0,0,'','','','label'),
    (9,'caly4',NULL,0,0,'','','','label'),
    (9,'caly5',NULL,0,0,'','','','label'),
    (9,'caly6',NULL,0,0,'','','','label'),
    (9,'caly7',NULL,0,0,'','','','label'),
    (9,'caly8',NULL,0,0,'','','','label'),
    (9,'calx8',NULL,0,0,'','','','label'),
    (9,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (9,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (9,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (9,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (9,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (9,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(10,'Unknown, 3011 IR, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (10,'private.id_bundle','303',0,0,'','','',''),
    (10,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (10,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (10,'controller_matching','3011;5016',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (10,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (10,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (10,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (10,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (10,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (10,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (10,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (10,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (10,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (10,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (10,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (10,'device_name','Goldfinger, IRTouch V2, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (10,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (10,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (10,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (10,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (10,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (10,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (10,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (10,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (10,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (10,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (10,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (10,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (10,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (10,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (10,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (10,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (10,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (10,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (10,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (10,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (10,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (10,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (10,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (10,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (10,'macosx_match_all_pids',NULL,1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (10,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (10,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (10,'legacy.xshift',NULL,0,0,'','','','none'),
    (10,'legacy.yshift',NULL,0,0,'','','','none'),
    (10,'legacy.1mask',NULL,0,0,'','','','none'),
    (10,'legacy.0mask',NULL,0,0,'','','','none'),
    (10,'legacy.xmask',NULL,0,0,'','','','none'),
    (10,'legacy.ymask',NULL,0,0,'','','','none'),
    (10,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (10,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (10,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (10,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (10,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (10,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (10,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (10,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (10,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (10,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (10,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (10,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (10,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (10,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (10,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (10,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (10,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (10,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (10,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (10,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (10,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (10,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (10,'legacy.invertmask',NULL,0,0,'','','','none'),
    (10,'legacy.tipshift',NULL,0,0,'','','','none'),
    (10,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (10,'legacy.tipmask',NULL,0,0,'','','','none'),
    (10,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (10,'liftoff_ignore_coordinates','1',1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (10,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (10,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (10,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (10,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (10,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (10,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (10,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (10,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (10,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (10,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (10,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (10,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (10,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (10,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (10,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (10,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (10,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (10,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (10,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (10,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (10,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (10,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (10,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (10,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (10,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (10,'calx2',NULL,1,1,'','','','none'),
    (10,'calx3',NULL,1,1,'','','','none'),
    (10,'caly2',NULL,1,1,'','','','none'),
    (10,'caly3',NULL,1,1,'','','','none'),
    (10,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (10,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (10,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (10,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (10,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (10,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (10,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (10,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (10,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (10,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (10,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (10,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (10,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (10,'usb.is_composite_device','0',1,0,'','','0','none'),
    (10,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (10,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (10,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (10,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (10,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (10,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (10,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (10,'legacy.stshift',NULL,1,0,'','','','none'),
    (10,'legacy.stmask',NULL,1,0,'','','','none'),
    (10,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (10,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (10,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (10,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (10,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (10,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (10,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (10,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (10,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (10,'vendor_name',NULL,1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (10,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (10,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (10,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (10,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (10,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (10,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (10,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (10,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (10,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (10,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (10,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (10,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (10,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (10,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (10,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (10,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (10,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (10,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (10,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (10,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (10,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (10,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (10,'_A',NULL,0,0,'','customisation=none','','none'),
    (10,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (10,'i2c.device_instance',NULL,0,0,'','','','none'),
    (10,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (10,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (10,'calx4',NULL,0,0,'','','','label'),
    (10,'calx5',NULL,0,0,'','','','label'),
    (10,'calx6',NULL,0,0,'','','','label'),
    (10,'calx7',NULL,0,0,'','','','label'),
    (10,'caly4',NULL,0,0,'','','','label'),
    (10,'caly5',NULL,0,0,'','','','label'),
    (10,'caly6',NULL,0,0,'','','','label'),
    (10,'caly7',NULL,0,0,'','','','label'),
    (10,'caly8',NULL,0,0,'','','','label'),
    (10,'calx8',NULL,0,0,'','','','label'),
    (10,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (10,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (10,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (10,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (10,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (10,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_controller (id,name)
VALUES(11,'SiS, MT, USB');

/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value, control_type )
VALUES
    (11,'private.id_bundle','303',0,0,'','','',''),
    (11,'calibration_timeout',NULL,1,0,'The number of seconds that the UPDD Calibrate program will wait without input before terminating

0 = Wait indefinitely','0-3600
off=0
on=10','10','spin+check'),
    (11,'identified','0',1,1,'A run time flag to indicate that a device has been identified.
The identify operation is an option of UPDD Calibrate, use to associate a device with a monitor.

"UPDD Calibrate" identify

If UPDD Calibrate is executed with no arguments then the identify operation is executed for all devices where this not set (0)','','0','label'),
    (11,'controller_matching','0457;819',0,0,'Identifies the vendor id, product id and optional extended matching that will be matched to the associated controller definition

the string is formed of at least 2 parts separated by semicolons

<VID>;<PID>[;EXTENDED]

VID and PID can be any of 

a single value, eg 4f3
a range of values, eg 4f3-4f4
a list of values, eg 4f3,4f5
a mix of the above, eg 4f3-4ff,555,600-602

VID AND PID are specified in hex, leading zeroes are optional

EXTENDED is currently only used in special OEM packages','','','none'),
    (11,'usb_serial_required','0',1,0,'Indicates that the the usb serial number is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','0','none'),
    (11,'usb_product_required','0',1,0,'Indicates that the the usb product string  is required, if the controller does not report a serial number or the read of this value fails the controller will be ignored during enumeration','','','none'),
    (11,'usb_endpoints','81,82,83,84,85,86,87,88,89',0,0,'A comma separated list of (IN) endpoints that will be utilised by this USB device. 

Values areexpressed in hex.

Endpoints not in this list are simply ignored. 

Endpoints in this list that are not implemented by the device have no effect.','','81,82,83,84,85,86,87,88,89','none'),
    (11,'usb_timeout','0',1,0,'If set to a non-zero value usb input transfers will timeout after this number of milli-seconds passes without data being received. 
This does not normally need to be set','','0','lineedit'),
    (11,'bindmode','5',1,0,'Decimal value e.g. 53 = 0011 0101, 5 = 0101

Defines the fields that are used to distinguish usb devices when multiple devices are in use using the following bit flags

#define BIND_VIDPID 0x01
#define BIND_USB_SERIAL 0x02
#define BIND_USB_LOCATION 0x04

-- following values are > 0x5 so omitted by the default setting

#define BIND_USB_INTERFACE 0x10     -- experimental 
#define BIND_USB_ENDPOINT 0x20     -- experimental 
#define BIND_USB_BCD 0x8000
#define BIND_USB_INDEX 0x4000

BIND_USB_INDEX uses the relative position in the enumerated list of supported devices','','5','none'),
    (11,'calx0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (11,'calx1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (11,'caly0','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (11,'caly1','0',1,1,'A calibration co-ordinate (raw value from controller)','','','none'),
    (11,'monitor_number','1',1,1,'The monitor number associated with this device instance','','1','lineedit'),
    (11,'monitor_segment','0',1,1,'Indicates the monitor segment associated with this device. 

See monitor_segment_map for a decription of monitor segmentation.','1
2
3
4
5
6
7
8
9','1','combo'),
    (11,'device_name','Goldfinger, PCAP_SIS, USB',0,1,'A user friendly name for the device instance','','','lineedit'),
    (11,'hid.is_hid','1',1,0,'Identifies a device as an HID device','','','none'),
    (11,'hid.number_reportids',NULL,1,0,'The number of hid report ids defined for this controller 

the details of each hid report are specified in fields hid.%1.xxxxxxxx','','1','none'),
    (11,'hid.0.mode',NULL,0,0,'Defines the touch mode described by this hid report 
A single character value,  s / p / h for serial / parallel / hybrid','','','none'),
    (11,'hid.0.report_id',NULL,1,0,'The report id of the hid report being described.','','','none'),
    (11,'hid.0.hybrid_contact_count_position',NULL,1,0,'The offset in bits of the contact count in a hybrid packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the contact count.','','','none'),
    (11,'hid.0.contacts_per_report',NULL,1,0,'The maximum number of contacts that can fit in a single HID packet.','','','none'),
    (11,'hid.0.packet_length',NULL,1,0,'The total length of an indivdual hid report packet. 
NB an HID packet can span multiple USB packets.','','','none'),
    (11,'hid.0.contact_report_length',NULL,1,0,'The length of each contact report (AKA touch report)  in an hid packet.','','','none'),
    (11,'hid.0.packet_x_start',NULL,1,0,'The offset in bits of the first byte containing x information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (11,'hid.0.packet_y_start',NULL,1,0,'The offset in bits of the first byte containing y information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (11,'hid.0.packet_z_start',NULL,1,0,'The offset in bits of the first byte containing z information.
This position is relative to the start of an individual contact report.
Currently must be a multiple of 8.','','','none'),
    (11,'hid.0.packet_st_start',NULL,1,0,'The offset in bits of the byte containing stylus information
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bits can be masked and shifted using the hid.%1.packet_st_mask and hid.%1.packet_st_shift values','','','none'),
    (11,'hid.0.packet_x_bits',NULL,1,0,'The number of bits used for x data in each contact report.','','','none'),
    (11,'hid.0.packet_y_bits',NULL,1,0,'The number of bits used for y data in each contact report','','','none'),
    (11,'hid.0.packet_z_bits',NULL,1,0,'The number of bits used for z data in each contact report.','','','none'),
    (11,'hid.0.packet_touching_start',NULL,1,0,'The offset in bits of the byte containing the touching bit
Currently must be a multiple of 8. 
Currently a single byte is assumed for this field. 
The specific bit can be masked  using the hid.%1.packet_touching_mask field','','','none'),
    (11,'hid.0.packet_touching_mask',NULL,1,0,'','','','none'),
    (11,'hid.0.packet_count_position',NULL,1,0,'The offset in bits of the packet count in a parallel packet. 
Currently must be a multiple of 8. 
Currently a length of 8 bits is assumed for the packet count.','','','none'),
    (11,'usb_interfaces','0,1,2,3',0,0,'A comma separated list of interfaces to be utilised for this device. 

Values are expressed in hex.','','0,1,2,3','none'),
    (11,'hid.is_auto','1',1,0,'If true (1) tndicates that UPDD should use the HID report descriptor from the device to determine the configuration','','0','none'),
    (11,'interactive_touch',NULL,0,0,'Enables the interactive touch function. 

Not applicable to pen devices.

With interactive_touch ''not off'' a long press on a touch device results in a right click

off - no right click processing

immediate - the click right is generated when the time period expires

drag - a right button down event is generated when the time period expires - right button up occurs at the end of the touch

latched - the click right is generated at the end of the touch when the time period has previously expired

See also interactive_touch.visual

For compatibility purposes the pre 483 settings 0 (off), 1 (immediate) are also supported since release 496.','Off
Immediate
Drag
Latched
off=Off
on=Immediate','Off','combo+check'),
    (11,'interactive_touch.visual',NULL,1,0,'Enables the interactive touch visualisation feature. 

With interactive_touch_visualisation on(1) a circle is drawn on the screen during a long press 
to indicate the time before a right click is made. 

The setting interactive_touch must be on (1)

The UPDD Daemon process must be running.','','1','check'),
    (11,'interactive_touch.time_ms',NULL,1,0,'Defines the time in milli seconds that must elapse with a steady press held before the interactive_touch feature generates a right click.','0-2000','550','spin'),
    (11,'disable_remote_wakeup',NULL,1,0,'Causes the remote wakeup feature to be disabled for this device type','','1','check'),
    (11,'macosx_match_all_pids','1',1,0,'For mac releases only setting this value to true (1) causes a kext file that uses wildcard product id matching to be created during the software release process. 
This settting is only used during release but is present in the delivered package to indicate that this option was in effect. 

Changing this setting on a target system has no effect. 

NB regardless of the setting of this value the driver package will only support USB devices matched by the controller_matching option. 
This option is used only to reduce the size of kext files where a wide range of PIDs are required.','','0','none'),
    (11,'monitor_sharing.enable',NULL,1,0,'When on (1) the behaviour of "identify" is altered so that another device can be associated with the same monitor. 
After touching on the identify screen; the prompt text changes and asks the user to touch again with another screen or advance using the "next" button 

Typically this is used for a composite device where 2 or more touch devices work with one screen and are presented as a separate devices to teh operating system (eg separate pid and / or vid). 

In such a configuration both device types should be defined with this setting.','','0','check'),
    (11,'monitor_sharing.share_calibration',NULL,1,0,'For a shared monitor configuration (see monitor_sharing.enable) setting this value on (1) allows the devices to share calibration data. This is only useful when both devices have an identical raw range. 

Although generally used with monitor_sharing.enable, this will work regardless of that setting.','','0','check'),
    (11,'legacy.xshift',NULL,0,0,'','','','none'),
    (11,'legacy.yshift',NULL,0,0,'','','','none'),
    (11,'legacy.1mask',NULL,0,0,'','','','none'),
    (11,'legacy.0mask',NULL,0,0,'','','','none'),
    (11,'legacy.xmask',NULL,0,0,'','','','none'),
    (11,'legacy.ymask',NULL,0,0,'','','','none'),
    (11,'calibration_margin.next',NULL,1,0,'Used to implement a non-standard calibration margin. 
This margin will be used for the next calibration.

If blank the value of calibration_margin is used','0-20','10','spin'),
    (11,'calibration_margin',NULL,1,1,'The position used for calibration points expressed as a percentage from the edge of the calibrated area

As this value is used internally and must match the position of the calibration points you should not normally change this setting. 
Use calibration_margin.next to adjust the margin to be used by the next calibration','0-20','','label'),
    (11,'usb.macro.before_probe',NULL,0,0,'','','','none'),
    (11,'usb.macro.before_hid',NULL,0,0,'A usb macro to execute just before the hid report descriptor is read. 
See usb.macro.after_start_interrupts for syntax details','','','none'),
    (11,'usb.macro.after_start_interrupts',NULL,0,0,'A UPDD USB macro allows USB requests to be issued using a macro statement to describe the requests. 

This setting defines a macro to be sent after the first interrupt is pending.

A macro takes the following form 


recipient=<device|interface|endpoint|other> type=<standard|class|vendor|reserved> direction=<in|out> request=<request> value=<value> index=<index> [length=<length>]  [data=<data>]

request is a 1-2 character hex value to use as bRequest in the usb request 
value is a 1-4 character hex value to use as wValue in the usb request 
index is a 1-4 character hex value to use as wIndex in the usb request 
wLength is a 1-4 character hex value to use as wLength in the usb request - this is ignored if the data option is specified 
data a series of 2 character hex  values to represent the data part (if any) of an out request. If specified then wLength will be hald the length of this string (as each hex charascter pair represents on data byte).

V5 conversion note; 
  direction=in is equivalent to flags=1 in V5 (device to host)
  direction=out is equivalent to flags=0 in V5 (host to device)

Example 

recipient=interface type=class direction=out request=9 value=0304 index=0 length=3  data=040200

Syntax rules 

All options are case insensitive 
All numeric options are in hex
The arguments pairs must have no spaces 
	eg recipient=interface is ok    recipient = interface is not
The same applies to the data block 
        eg data=040200  is ok data=04 02 00 is not. 

For multiple requests each must appear on a separate line 

A comment can be entered by entering "//" at the start of a line','','','label'),
    (11,'hid.0.first_contact_position',NULL,0,0,'','','','none'),
    (11,'hid.0.packet_st_bits',NULL,1,0,'','','','none'),
    (11,'hid.0.tip_switch_bit',NULL,1,0,'','','','none'),
    (11,'hid.0.barrel_switch_bit',NULL,0,0,'','','','none'),
    (11,'hid.0.eraser_bit',NULL,0,0,'','','','none'),
    (11,'hid.0.invert_bit',NULL,0,0,'','','','none'),
    (11,'hid.0.in_range_bit',NULL,1,0,'','','','none'),
    (11,'edge_adjust_margin',NULL,1,0,'The size in % of a margin around the controlled on screen area (monitor or segment) used by the edge adjust feature. 

Edge adjust is described below. 

In some cases it is difficult or impossible to touch on screen elements at the edges of a touch screen. 
Edge adjust is a feature to deal with such cases. It works by "learning" where the touchable extremities lie and treating this as the input edge. 

Any touch that falls within edge_adjust_margin % of any edge of a touchable area (monitor, desktop or segment)  will be adjusted towards the real edge. 
The degree of adjustment takes account of the outer bounding rectangle of previous touches since the last calibration. 

In normal use this makes it possible for a user to touch on screen elements at the edges. 
Until an extreme edge has been touched there will be a degree of inaccuracy, this reduces the closer to the edge that the user touches and becomes zero in that case that  the edge can be and is touched. 

This feature can be disabled by setting  edge_adjust_margin = 0.','0-10','2','spin'),
    (11,'no_implicit_calibration',NULL,1,0,'Implicit calibration is the calibration that runs in Configure mode in some cases. 
For devices that are calibrated by default this can be undesirable  and setting this option allows this behaviour to be turned off for a device type.','','0','none'),
    (11,'hid.report_descriptor.a',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (11,'hid.report_descriptor.b',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (11,'hid.report_descriptor.selected',NULL,0,0,'Defines the hid.report_descriptor.X to be utilsied, eg set this to a value a to select hid.report_descriptor.a

On a non-windows system this value is assumed to be ''a'' if not present. 
On Windows it must be explicitly set.','','','label'),
    (11,'hid.report_descriptor.crc',NULL,0,0,'','','','none'),
    (11,'active_touch_interface',NULL,0,1,'Allows a specific touch interface to be selected for a device.
If this field is blank or omitted an appropriate default for the operating system will be chosen. 
This will block driver touch operations for the device but not data to the api ? and thus tuio etc will continue to work.

The built in values are 

tbupddsu:             a single touch interface module for Windows 
upddvh:                a multi touch interface for Windows vista and higher 
simpletouch:         a basic single touch client interface that works only when a user is logged in (currently MAC only)  (uses HID) 
simpletouch_cg:   a basic single touch client interface that works only when a user is logged in (MAC only)  (uses core graphics) 

uinput:                  linux event system 
xtouch:                 linux xtest interface
updd-gestures:    the UPDD Gestures utility (currently MAC only) 
w32_events:        Send touches directly to applications (Windows only)


Additionally a 3rd party can add a new touch interface. Specifying the name here hands control to that interface. 
Such an interface implementation should also check the value of this field and only deliver touches if this value matches the custom name.','tbupddsu
upddvh
simpletouch
simpletouch_cg
uinput
xtouch
updd-gestures
w32_events
none','','combo'),
    (11,'liftoff_time_ms',NULL,1,0,'With this set to a non-zero value; a liftoff event will be injected in the case that a touch event is not seen within this period (in milli-seconds) following a previous touch event.
A value of zero would be suitable for delta mode controllers. As of build 518 this supports multi touch devices. 


Prior to 6.0.518 

This is only suitable for single touch devices','0-5000
off=0
on=500','500','spin+check'),
    (11,'hid.detect_hidrd_change',NULL,1,0,'If set to a non-zero value; if the HID report descriptor changes for a newly plugged in device (compared to the previous value for that UPDD device instance) calibration data is re-read from the HID report descriptor','','0','lineedit'),
    (11,'enabled',NULL,1,1,'If set to zero touch is turned off.
The device remains connected and active; but data is not delivered to the API or touch interface

A default of 1 is implied if this setting is not present

Note; to turn off the touch interface only it might be appropriate to set active_touch_interface = "none"','','1','check'),
    (11,'legacy.invertmask',NULL,0,0,'','','','none'),
    (11,'legacy.tipshift',NULL,0,0,'','','','none'),
    (11,'disable_interface_prolog',NULL,1,0,'','','0','check'),
    (11,'legacy.tipmask',NULL,0,0,'','','','none'),
    (11,'hid.0.digitiser_type',NULL,0,0,'','','','none'),
    (11,'liftoff_ignore_coordinates',NULL,1,1,'If set (1) the x/y co-ordinates in any lift packet are ignored

This is only suitable for single touch devices','','0','check'),
    (11,'sound.touch',NULL,1,0,'The index number of a sound file to be played when a touch starts 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (11,'sound.lift',NULL,1,0,'The index number of a sound file to be played when a touch ends 

see sound.file.1 for a description of sound file settings','','','lineedit'),
    (11,'click_mode',NULL,1,0,'Determines what action the driver takes in response to a physical touch. 

Valid values are 0,1,2,3

0: Click and drag; the standard behaviour. On touch a mouse down event occurs. At the end of touch a mouse up event occurs. 
1: Move then click; The mouse is moved in response to movements of the touch. A click is generated at the end of touch. 
2: Point and click; A click is generated at the start of touch. Movement is ignored. 
3: No click; Movement only 


Modes 1 and 2 are intended for use in single touch environments. In a multi touch environment the same logic will apply to all concurrent touches which is unlikley to be useful.

Visual feedback is dependant on the selected touch interface (see active_touch_interface)','enumeration=
Click and drag
Move then click
Point and click
No click','0','combo'),
    (11,'hid.parallel_epilog',NULL,1,0,'Setting this to 1 enables parallel_epilog processing. 

Parallel epilog processing executes after a complete parallel or hybrid packet is processed and creates liftoff events for any contacts that have "gone away".','','0','none'),
    (11,'hid.include_out_of_range',NULL,1,0,'By default out of range HID packets are not reported by the API. 
Setting this value to 1 causes out of range packets to be reported. 

Regardless of this setting liftoff events are reported even if the packet indicates out of range','','0','none'),
    (11,'contact_timeout_secs',NULL,1,1,'If set to a non zero value any contact (touch) longer than the specified period is cancelled (forced lift) and ignored until the contact ends.
Other contacts are unaffected. 
Depending on circumstances this can be useful to filter out ghost touches
It will only be effective where the ghost touches are more or less constant','','0','spin'),
    (11,'virtual_device',NULL,1,0,'A value of 1 indicates that this is a virtual device type. 
A virtual device always shows connected','','','none'),
    (11,'eeprom.protocol',NULL,0,0,'the name of the eeprom protocol supported by this device (if any)','','','label'),
    (11,'eeprom.calibration_on',NULL,0,1,'If true (1) eeprom calibration is enabled for this device','','','check'),
    (11,'eeprom.calibration.readstatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last read of eeprom calibration data','','','label'),
    (11,'eeprom.calibration.writestatus',NULL,1,1,'A boolean value that indicates the succes or otherwise of the last write of eeprom calibration data','','','label'),
    (11,'ignore.stylus',NULL,0,0,'Specifies any stylus(s) to ignore - specifically added for timelink, gestues, pid switching issue

Stylus defined comma separated.','','','lineedit'),
    (11,'ignore_tip_switch',NULL,1,0,'When set to on (1) the tip switch bit (AKA lift bit) is ignored. Normally used in conjunction with a non-zero value for liftoff_time_ms','','0','check'),
    (11,'port_type','usb',0,0,'The type name for the hardware interface, can be 

usb
serial','usb
serial
i2c
hidi2c
hidusb','usb','label'),
    (11,'rs232.macro',NULL,0,0,'A macro to describe an initialisation sequence for the device','','','lineedit'),
    (11,'rs232.baudrate',NULL,1,0,'the baud rate of the device; one of the following

1200
2400
4800
9600
19200
38400
57600
115200','','','lineedit'),
    (11,'rs232.databits',NULL,1,0,'The data bits setting for the port; one of the following

5
6
7
8

In practice this almost certainly be 8','','','lineedit'),
    (11,'rs232.parity',NULL,1,0,'The parity setting for the port; one of the following

0	NoParity:     No parity bit it sent. This is the most common parity setting. Error detection is handled by the communication protocol.
2	EvenParity:   The number of 1 bits in each character, including the parity bit, is always even.
3	OddParity:    The number of 1 bits in each character, including the parity bit, is always odd. It ensures that at least one state transition occurs in each character.
4	Space parity: The parity bit is sent in the space signal condition. It does not provide error detection information.
5	Mark parity:  The parity bit is always set to the mark signal condition (logical 1). It does not provide error detection information.','','','lineedit'),
    (11,'rs232.port',NULL,0,0,'The port name, varies by operating system, 
For example on Windows 

COM1 
COM2

On Unix based systems a port is typically 

/dev/ttySN
for a physical com port 
and 
/dev/ttyUSBN
for a USB -> serial adaptor 
In both cases N is a number starting at 0. 
The full device path or the device name may be used 
eg 
/dev/ttyS0 or  ttyS0
In the latter case /dev/... is assumed. The full path is useful for example in the case of a system with a non standard device path.

a value of auto can also be used. This is only tested on Windows and currently supports only one device
see the settings rs232.probe and rs232.probe.ack which are useful in conjunction with auto','','','lineedit'),
    (11,'rs232.stopbits',NULL,0,0,'1	1 stop bit.
3	1.5 stop bits. This is only for the Windows platform.
2	2 stop bits.','','','lineedit'),
    (11,'legacy.asciimode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii format','','0','none'),
    (11,'calibration_points',NULL,1,1,'Unless this is specified in the buiild then prior to calibration the ''internal'' default calibration points is 2 because this is what we will get back from HID RD.  This setting will not have been set so there will be no default as such and the calibration_points.next will determine the number.  After calibration this value will be set to reflect the number that were used.
The number of points on which calibration data is based
Pre 6.0.364 - 2 if set from HID RD,4 points following calibratiuon procedure, 2 actually used, raw data with no mapping
Post 6.0.364 - 2 if set from HID RD, 4,9,25 points if set in calibration_points.next.','4
9
11
25','0','label'),
    (11,'disable_set_alt0',NULL,0,0,'Until 8 Aug 19  the default for disable_set_alt0 was 0 but it is now 1. 

Setting this 0 enables this action, 1 disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (11,'disable_get_max_contacts',NULL,1,0,'By default we will query the max contacts feature if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value

this sets the defaults for this controller type, and this is available and used during USB initialisation.','','0','check'),
    (11,'disable_set_device_mode',NULL,1,0,'By default we will use the set device mode feature to multi touch  if the device supports it

Setting this on (1) disables this action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','0','check'),
    (11,'calx2',NULL,1,1,'','','','none'),
    (11,'calx3',NULL,1,1,'','','','none'),
    (11,'caly2',NULL,1,1,'','','','none'),
    (11,'caly3',NULL,1,1,'','','','none'),
    (11,'hid.manual_report_id',NULL,1,0,'This setting allows a single report id to be specified manually, whilst all other report ids are taken from  the controllers hid report decriptor. 

The value of this setting is the number of the report id to manually specify. 

The values hid.0.* must be set for this report id. 

This is useful in the case of a custom report id .','','0','none'),
    (11,'monitor_bind.display_name',NULL,0,1,'Specifies a display (screen) name substring  If a value is specified then the device will associate itself with a screen with a name containing that value.

EG if the value is XYZ and a display named XYZ Multi touch is found, this wil be used. 

This binding is checked every time there is a setting change notification; so the binding is dynamic, ie will track changes. 

The matching is case insensitive

Note that in some cases the name of a monitor as reported by the OS to UPDD might differ from that seen in various system tools.

To see the names as known by updd; use the command 

   upddutils get "monitorsetupname*"

Currently only supported in Windows and Mac

Mulitiple tokens can be used separated by a semicolon eg 

14T;DEL

It any token matches then this is considered to be a match

Starting with build 393 a token can represent a screen resolution in the format widthxheight 

Eg 1024x768 

If no match is found based on display name then the resolution tokens are checked

Starting with build 632 the following special tokens are available. 

disp=primary
disp=secondary

This will bind to a primary or secondary monitor as appropriate. 

A primary monitor is defined as that having it''s origin at 0,0 
A secondary  monitor is defined as the first not having it''s origin at 0,0 

A secondary monitor binding with no other tokens is only useful in a 2 monitor system.','','','lineedit'),
    (11,'private.screen_rotation.calibrated.angle',NULL,1,1,'','','0','none'),
    (11,'assisted_double_click.time_ms',NULL,1,1,'Assisted double click assists double clicking by generating a second touch at the same location of the previous one when 

1)	The time since the end of the previous touch is less than assisted_double_click.time_ms
2)	The distance between the previous point of touch and the actual position of the second touch is less than assisted_double_click.width_pixels in either direction (X or Y) 

The actual values chosen will vary according to the screen resolution and the nature of the touch input; but in tests the following values typically gave good results 

assisted_double_click.time_ms 750 
assisted_double_click.width_pixels 75','0-2000
off=0
on=750','0','spin+check'),
    (11,'assisted_double_click.width_pixels',NULL,1,1,'See assisted_double_click.time_ms','0-200','75','spin'),
    (11,'private.screen_rotation.angle',NULL,1,1,'Holds the current screen rotation angle, this is set by the UPDD Daemon and should not normally be changed manually','','0','none'),
    (11,'deglitch.packets',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.cal_points turns this feature off. 

With this feature on, a packet will not be accepted unless it is within deglitch.cal_points of the previously accepted packet or deglitch.packets have been received each within deglitch.cal_points of the previous (not accepted) packet.','','','lineedit'),
    (11,'deglitch.cal_points',NULL,1,0,'Controls the deglitch function. A value of zero in this or the related setting deglitch.packets turns this feature off. Value is based on 65535 calibrated co-ord range.
See deglitch.packets for details.','','','lineedit'),
    (11,'interactive_touch.latched',NULL,1,0,'** obsolete **


Modifies the behaviour of the interactive touch function. 
Interactive touch must be enabled

With interactive_touch.latched on(0) the right click generated immediately at the end of the long press threshold, even if still touching.
With interactive_touch.latched on(1) the right click generated at the end of touch (finger lift) after the long press threshold','','0','check'),
    (11,'hid.report_descriptor.selection_rule',NULL,0,0,'For cases where the multiple hid report descriptors are embedded in updd settings 
(see hid.report_descriptor.x and hid.report_descriptor.selected) this setting allows the 
hid report descriptor to be auto selected based on an attribute of the incoming data packet. 
Currently only packet length is supported. 

The value takes the form

ignore=FB;len=38,a; len=62,b;

In the example above a 38 byte incoming data packet would select hid.report_descriptor.a 
(by setting hid.report_descriptor.selected=a). 62 would select b; 
Reports with an id of 0xFB are ignored. 

Notes: If a switch occurs the device is logically disconnected briefly.
            The expressions are evaluated from left to right until a match is found. 
            No switch occurs if no match found; so hid.report_descriptor.selected can define a default

            Ignore is optional, any ignore statments must preceed len= statements','','','label'),
    (11,'calibration_confirm',NULL,0,0,'Show a confirm button at the end of calibration','','0','check'),
    (11,'calibration_min_delta',NULL,1,0,'Number of raw points that must separate a calibrated point from the previous for it to be accepted','','0','spin'),
    (11,'legacy.packet_length',NULL,1,0,'If not zero specifies the length of the data packet. 
Should be specified for serial controllers','','0','none'),
    (11,'usb.is_composite_device','0',1,0,'','','0','none'),
    (11,'hid.skip_hidrd_check',NULL,1,0,'If true (1) don''t treat  a missing hid report descriptor, or a failed read of the hid report descriptor as an error

Used when the following 2 conditions are true

1) An override hidrd descriptor is defined in the setttings
2) Failure of a different request can be used to check for exclusive device control

NOTE:  If you do not have an embedded HIDRD and the HID has to be taken from the controller to set up the HID settings then this should not be set - you will see the error in the log bootlog "Config error no hidrd?.','','0','check'),
    (11,'disable_set_config',NULL,1,0,'Setting this on (1) disables the libusb set configuration action

NB this is a controller setting and can not be overridden at an instance level; so use "upddutils setall" to change this value','','','check'),
    (11,'touchdown_filter',NULL,1,0,'If set to a non zero value this causes the first N packets in any touch that represent a touching state to be treated as determined by the settind touchdown_filter_mode','','0','lineedit'),
    (11,'calibration_points.next',NULL,1,1,'The number of calibration points used by the calibration routine.

If blank then the calibration_points setting is used','4
9
11
25','4','combo'),
    (11,'ignore_multi_touch',NULL,1,1,'If true (1) then  multi touch events are discarded','','0','check'),
    (11,'synthesize.delta_mode',NULL,1,0,'If set to on (1) a device will work in synthesized delta mode. Only touch packets that represent movement or a change in a contact state are delivered to the operating system and the UPDD API.','','0','check'),
    (11,'sample_rate',NULL,1,0,'Specifies the percentage of position report packets that are passed to the OS and the UPDD API. 

Note that the algoritm works on blocks of 10 packets; so for example a setting of 20 means that 2 of every 10 packets are processed. 

Consequently only multiples of 10 are useful, for other values, the value is rounded down to  the next multiple of 10.','','100','lineedit'),
    (11,'legacy.stshift',NULL,1,0,'','','','none'),
    (11,'legacy.stmask',NULL,1,0,'','','','none'),
    (11,'filter.low_pass.gain',NULL,1,0,'When set to a non-zero value low pass filtering is enabled. 

Low pass filtering provides smoothing of input, removing jitter from inputs subject to noise or similar distortion. 

LPF will introduce some lag, especially at higher values; but at low values it provides smoothing with minimal loss of fidelity and lag. 

The appropriate value will have to be determined by experiment, but typically values of around 5 will give good results. 

Values over about 20 will tend to give extreme lag. 

The feature is multi touch aware; operating on all contacts independently','0-2000
off=0
on=5','0','spin+check'),
    (11,'fixed_scale_x',NULL,0,0,'This is a device setting 

It is a decimal number using US / UK local formatting (ie decimal point is ?.?) 

If set these values override all calibration functions and provide a fixed scaling ratio. 

This is useful in situations where a normal calibration is not practical. 

The entered value should by 65535 / <the largest raw co-ordinate reported by the device in question>.

For example if a controller outputs co-ordinates in the range 0 ? 4095 then the value entered should be 16.0 


To determine the largest value, use the command 

upddutils events 1 

And touch the bottom right corner of the screen. 
The values rx and ry (raw x & y) shopw the max values. 

 
NB this only works for screens with the origin (0,0) at top left.','','','lineedit'),
    (11,'fixed_scale_y',NULL,0,0,'See fixed_scale_x','','','lineedit'),
    (11,'device_type','Unspecified',0,0,'','AIO system
Digital Signage
Foil
Kiosk
Monitor
Notebook
Open Frame
Pen
POS
Rugged PC
Tablet PC
Touch device
Touch overlay
UMPC
Whiteboard type device
Unspecified','Touch device','label'),
    (11,'libusb.concurrent_interrupts',NULL,1,0,'Experimental settting. 

Setting this to a value > 1 causes the driver to initate the specified number of interrupts.
This might improve throughput in some cases. 
This si known to have no impact on Windows (libusb and / or Winusb appears not to support this)','','1','none'),
    (11,'hid.report_descriptor.c',NULL,0,0,'This defines a complete hid report descriptor which can be used to override that in the controller. 
Typically this is used to implement an HID report descriptor taken from a Windows system for buggy devices 
that report a different HID report descriptor on MAC OS/X thus preventing multi touch capabilities. 

There can be more than one entry, identified by the suffix (a b c etc). 

The entry used is identifed by the setting hid.report_descriptor.selected

This allows a user to switch between descriptors. 

The report descriptor must be in the format reported by upddutils diag dumphid, or the gethid tool','','','none'),
    (11,'protocol.preprocessor',NULL,0,0,'Specifies a pre-processing algorithm used for the device','ELO2515
KME_SERIAL_GESTURES','','label'),
    (11,'hid.1.packet_length',NULL,1,0,'See hid.0.packet_length','','','none'),
    (11,'legacy.hexmode',NULL,1,0,'If set (1) indicates that raw data from a controller is in ascii hex format','','0','none'),
    (11,'vendor_name','Silicon Integrated Systems Corp.',1,0,'Specifies the company name associated with the USB Vendor id','','','none'),
    (11,'usb.handle_stall',NULL,1,0,'Experimental setting; 

If a LIBUSB_TRANSFER_STALL error occurs

0 - the device is closed and the re-enumeration process invoked immediately

1 - the driver will invoke the older behaviour 

"Issuing clear halt and retrying "

From build 516 onwards the following values are supported

2 - the error is simply ignored, the next read is issued as though no error occurred 

3 - the device is closed and the re-enumeration process invoked immediately, no disconnect / connect messages are issued

Note that on Windows option 2, if set set applies a global setting that applies to all connected USB devices after a driver restart.','','1','lineedit'),
    (11,'interlock',NULL,0,1,'Controls the behaviour of touches concurrent on multiple devices

none - all touches are delivered to the operating system 

interlock - whilst a touch is active on the device to which this setting relates touches on other devices are ignored unless the other device has interlock = admin

admin - same as interlock + a touch on another will be cancelled if this device is touched','None
Interlock
Admin
off=None
on=Admin','None','combo+check'),
    (11,'legacy.serial_touch_protocol',NULL,1,0,'Some devices send touch data in a serial touch protocol (one contact per packet). The Windows HID interface UPDDVH can inject a parallel protcol, but to do so UPDD needs to have a parallel or hybrid input packet so that the logic for creating the parallel HID packet can determine which touch events should be combined into each packet. 

A value of 1 in this setting indicates a device working with a serial touch protocol and directs the driver to preprocess the serial data into a parallel format before later processing.','0
1','0','none'),
    (11,'controller_matching.mac',NULL,0,0,'mac override for controller_matching

if set this value is used instead of controller_matching when releasing for mac','','','none'),
    (11,'hid.1.packet_count_position',NULL,1,0,'','','','none'),
    (11,'controller_matching.notmac',NULL,0,0,'non-mac override for controller_matching

if set this value is used instead of controller_matching when releasing for non mac','','','none'),
    (11,'kext_override',NULL,0,0,'Allows the values of vid / pid  / mask for a kext to be specified explicitly 

Takes the form VVVV,PPPP,MMM; VVVV,PPPP,MMM

NB this is only for the kext, controller_matching.notmac or controller_matching must still be set. 
Values entered in tba are in hex 

Mask is defined here 
https://developer.apple.com/library/archive/qa/qa1076/_index.html

Examples
 to match CVTouch VID 2FE9 PID 1 ? 7FFF = 2FE9,0000,8000
 to match Weida VID 2757 PID 103,400-4ff = 2757,103,103;2757,0,800','','','none'),
    (11,'rs232.reset.byte',NULL,1,0,'Specifies a 2 character hex  representing 1 byte value that, if received from a serial device will trigger the resend of rs232.macro

eg for a byte value of 0x12 a value of 12 is needed
     for a byte value of 0x1  a value of  01  is needed','','','lineedit'),
    (11,'rs232.macro.keepalive',NULL,0,0,'A macro that is sent peridically to a device 

See rs232.macro for syntax, 
See rs232.macro.keepalive.ms for the timer interval used','','','lineedit'),
    (11,'rs232.macro.keepalive.ms',NULL,0,0,'The frequency at which any rs232.macro.keepalive is sent in milli seconds.','','10000','lineedit'),
    (11,'serial_multi_touch',NULL,1,0,'OBSOLETE','0
1','0','none'),
    (11,'ignore_out_of_area',NULL,1,1,'If set (1) touches outside the calibrated area are ignored','','1','check'),
    (11,'rs232.probe',NULL,0,0,'if the setting rs232.port is "auto" then the value represented by this setting is sent to each rs232 device in turn until one is found with the value represented by the setting rs232.probe.ack
when such a response is received the search ends and the value of rs232.port is set to the name of the port just identified 

The format of rs232.probe and rs232.probe.ack is a series of HEX byte pairs e.g. 

AA BB CC 

notes:
an empty rs232.probe.ack will match any or not response so leaving both rs232.probe and rs232.probe.ack blank allows the first  port to be selected.  
this is currently only tested on windows
this only works for a single device 
this should not be used in situations where sending the probe data to an unrelated device might be problematic','','','lineedit'),
    (11,'rs232.probe.ack',NULL,0,0,'See rs232.probe','','','lineedit'),
    (11,'interlock_release_time',NULL,1,1,'If set (>0) this specifies a time period in milli seconds during which a device retains interlock control after a touch ends','0-5000
off=0
on=500','0','spin+check'),
    (11,'power.stop_after_wake',NULL,1,0,'If set (1) the driver process is terminated after a power management "wake" event. 
The driver will then be restarted by the OS specific launcher allowing for a full software reset
MacOS and Windows only','','0','check'),
    (11,'hid.1.in_range_bit',NULL,1,0,'','','','label'),
    (11,'hid.1.packet_st_bits',NULL,1,0,'','','','label'),
    (11,'hid.1.packet_st_start',NULL,1,0,'','','','label'),
    (11,'hid.1.tip_switch_bit',NULL,1,0,'','','','label'),
    (11,'show_in_console',NULL,1,1,'If set (1) the device having this setting will be listed in UPDD Console. If unset (0) the device is not listed. 
Typically this is used to hide virtual devices that are defined for internal use.','0
1','1','check'),
    (11,'kme_gestures_enabled',NULL,1,0,'','0
1','1','check'),
    (11,'_A',NULL,0,0,'','customisation=none','','none'),
    (11,'hid.pad_return_buffer',NULL,1,0,'','','0','none'),
    (11,'i2c.device_instance',NULL,0,0,'','','','none'),
    (11,'ignore_maxz',NULL,1,0,'If set (1) any  value reported by TBApiGetMaxZ should be ignored.','','0','check'),
    (11,'hid.report_descriptor.d',NULL,0,0,'','','','none'),
    (11,'calx4',NULL,0,0,'','','','label'),
    (11,'calx5',NULL,0,0,'','','','label'),
    (11,'calx6',NULL,0,0,'','','','label'),
    (11,'calx7',NULL,0,0,'','','','label'),
    (11,'caly4',NULL,0,0,'','','','label'),
    (11,'caly5',NULL,0,0,'','','','label'),
    (11,'caly6',NULL,0,0,'','','','label'),
    (11,'caly7',NULL,0,0,'','','','label'),
    (11,'caly8',NULL,0,0,'','','','label'),
    (11,'calx8',NULL,0,0,'','','','label'),
    (11,'disable_set_interface_alt0',NULL,1,0,'','0
1','0','check'),
    (11,'notify.no_disconnect_on_overflow',NULL,1,0,'If set no disconnect notification is given when a USB overflow occurs','0
1','0','none'),
    (11,'hid.treat_overflow_as_valid',NULL,1,0,'If set; for an HID device that sends data packets longer than the packet length determined from the HID report descriptor treat the overflow as valid data
EG  if packet length is 64 and 128 bytes are received then treat this as 2 packtes. 

As currently implemented this assumes packet length defined in hidrd  to be 64 bytes as it was for a specific controller and there were further issues determining the packet length','0
1','0','check'),
    (11,'hid.force.reportid0',NULL,1,0,'','','0','none'),
    (11,'touchdown_filter_mode',NULL,0,0,'Controls the behaviour of touchdown_filter. If touchdown_filter is set (1) then filtered packets are discarded or treated as no contact (motion only) as determined by this setting','discard
no_contact','discard','combo'),
    (11,'eeprom.calibration_on.next',NULL,0,1,'The eeprom calibration mode used by the calibration routine.

If blank then the eeprom.calibration_on setting is used','','','check');
/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text,valid_values,default_value,control_type)
VALUES
    (0,'number_of_devices',NULL,1,0,'Number of device instances that have been discovered or explicitly registered; typically this is equal to the number of touchscreens in use','','0','label'),
    (0,'number_of_controllers',NULL,1,0,'The number of device types supported by the installed UPDD package','','','label'),
    (0,'tuio divide x axis',NULL,1,0,'','','1','none'),
    (0,'tuio send packets at updd rate',NULL,1,0,'','','1','none'),
    (0,'tuio show icon',NULL,1,0,'','','1','none'),
    (0,'gesture menu icon visible',NULL,1,0,'','','1','lineedit'),
    (0,'gesture double tap enabled',NULL,1,0,'','','','lineedit'),
    (0,'autoconfigure',NULL,1,0,'Enables the autoconfigure option

  With the autoconfigure option on (1) the configure function will operate next time any active device is touched 
    1) After installation 
    2) After any change to the geometry or number of monitors 

    Configure associates screens with pointer devices and performs a calibration function if needed

The UPDD Daemon process must be running.','','0','lineedit'),
    (0,'registration.installable_until',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','none'),
    (0,'registration.support_until',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','none'),
    (0,'license.type',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','none'),
    (0,'license.company',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','label'),
    (0,'license.bundle',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','label'),
    (0,'license.authentication_data',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','none'),
    (0,'license.authentication_method',NULL,0,0,'Used in license management, do not change this field as this will invalidate the software licence','','','none'),
    (0,'registration.is_eval',NULL,1,0,'Used in license management, do not change this field as this will invalidate the software licence','','1','none'),
    (0,'license.eval_click_limit',NULL,1,0,'Sets the click limit for evaluation

This setting has no effect unless the driver is in eval mode','','100','none'),
    (0,'license.reserved1',NULL,0,0,'','','','none'),
    (0,'license.reserved2',NULL,0,0,'','','','none'),
    (0,'license.reserved3',NULL,0,0,'','','','none'),
    (0,'license.reserved4',NULL,0,0,'','','','none'),
    (0,'license.reserved5',NULL,0,0,'','','','none'),
    (0,'gesture action double tap',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger drag',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger splay',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger squeeze',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger squeeze and splay',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action press',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action press and tap',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action rotate',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action five finger splay',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action five finger squeeze',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action five finger squeeze and splay',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger swipe down',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger swipe left',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger swipe right',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action four finger swipe up',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action one finger swipe left from right edge of screen',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action three finger swipe down',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action three finger swipe left',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action three finger swipe right',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action three finger swipe up',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action three finger drag',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action three finger tap',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action two finger double tap',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action two finger drag',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action two finger tap',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option double tap click using',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger drag reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger splay keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger splay keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger splay keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger squeeze keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger squeeze keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger squeeze keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option press click using',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger splay keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger splay keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger splay keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger squeeze keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger squeeze keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger squeeze keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option five finger squeeze and splay reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe down keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe down keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe down keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe left keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe left keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe left keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe left reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe right keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe right keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe right keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe right reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe up keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe up keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option four finger swipe up keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe down keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe down keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe down keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe left keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe left keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe left keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe left reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe right keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe right keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe right keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe right reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe up keystroke modifiers',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe up keystroke code',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option three finger swipe up keystroke text',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger swipe down reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger swipe left reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger swipe right reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger swipe up reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option tap click length',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger double tap reposition cursor',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger drag speed',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture action option two finger drag scroll direction natural',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture enable one finger swiping from screen edge',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture enable swiping from screen edge',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture force drag activation pressure',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture force drag deactivation pressure',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture force press activation pressure',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture force press deactivation pressure',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture four finger squeeze splay separate',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture gesture press visual feedback',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture press time',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture squeeze splay sensitivity',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture two finger double tap enabled',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture use two finger swipes',NULL,0,0,'Gestures Setting','','','lineedit'),
    (0,'gesture use three finger swipes',NULL,0,0,'','','','lineedit'),
    (0,'monitor_segment_map',NULL,0,0,'A monitor as viewed by the operating system can be further subdivided into segments each being controlled by a separate touch device. 
This is useful for example when using a video splitter which connects multiple physical devices that are seen as a single logical device by the operating system. 

This setting determines the layout of the segments on all monitors. 

The possible values are 

None (alias for 1x1)
1x1 
1x2
2x1
2x2
3x1
1x3
etc


x:n:[l,t,r,b]

For this  the latter format this is an example

monitor_segment_map=x:2:0,0,5555,ffff:5556,0,ffff,ffff

in this example x = extended
2 = number of segments. 
remainder is the arrangement of the 2 segments. 

Each segment is said to have a number and these are unary based (start at one) for the top left segment and increasing to the right and then down. 

Taking 2x2 as an example the segments are numbered thus. 

1 2 
3 4','1X1
2X1
1X2
2X2
3X1
3X2
1X3
2X3
3X3','1x1','combo'),
    (0,'monitor_segment_map.1',NULL,0,0,'This setting has the same meaning as monitor_segment_map, but applies only to monitor 1.','','','lineedit'),
    (0,'monitor_segment_map.2',NULL,0,0,'This setting has the same meaning as monitor_segment_map, but applies only to monitor 2.','','','lineedit'),
    (0,'uinput.virtual_input_path',NULL,0,0,'On Linux systems that support touch via the virtual input method this value allows the device path for the uinput device to be set explicitly. If not set and uinput mode is selected then the software will try 

/dev/uinput
/dev/input/uinput
/dev/misc/uinput

A driver restart is required to reconise a change to this value','','','lineedit'),
    (0,'uinput.single_touch',NULL,1,0,'If on (1) this option causes the driver to send standard single touch events to the kernel via the multi-touch virtual device.
It should not normally be necessary to change this setting, but it is available for cases where touch data should only be posted as multi touch events. 
Linux documentation suggests that single and multi-touch events can be mixed. 
This setting is to cater for cases where this is not the case; e.g. an incorrectly implemented client or down stream process. 

Note the implied default for this setting is 1. 

A driver restart is required to recognise a change to this value','','1','check'),
    (0,'anchor_mouse.enabled',NULL,1,0,'Anchor mouse is a feature that returns the system mouse pointer after a touch to the position immediately prior to the touch. 
With this feature enabled a user can use a mouse and touch screen interchangeably.

Set this value to 1 to enable this feature

Note the position of the pointer is restored. What is actually displayed is dependent on the operating system. 
The mouse cursor might not be displayed until the mouse is next used for example in some situations.','','0','check'),
    (0,'anchor_mouse.sample_time_ms',NULL,1,0,'anchor_mouse.sample_time_ms

When the anchor mouse feature is enabled this sets the time interval in milli-seconds at which the current mouse position is sampled. 

The default value of 100ms is equal to a 10th of a second.','0-10000','100','spin'),
    (0,'anchor_mouse.return_time_ms',NULL,1,0,'When the anchor mouse feature is enabled this sets the time lapse after a touch in milli-seconds before the system mouse pointer is returned to its previous location. 

The default value of 500ms is equal to half a second.','0-10000','500','spin'),
    (0,'gesture web browsers',NULL,0,0,'','','','lineedit'),
    (0,'no_autoclaim',NULL,1,0,'Controls behaviour of registration process','','0','none'),
    (0,'no_registered_to',NULL,1,0,'If 1, hide the registered to information in the UPDD Daemon about box','','0','none'),
    (0,'hide_systemtray_icon',NULL,1,0,'If this value is set to TRUE (1) then the system tray icon is not shown
  A restart of UPDD Daemon is required to make this effective','','0','check'),
    (0,'sound.file.1',NULL,0,0,'Names a wav file to be used with the sound options

The numbered suffix is used in the sound option 

The following placeholder symbols can be used

<app> the updd installation folder 
<win> the Windows system folder


Eg 

sound.file.1 = <app>\sound\beep.wav
sound.touch = 1

sound.file.2 = <app>\sound\boop.wav
sound.touch = 2','','','lineedit'),
    (0,'sound.file.2',NULL,0,0,'see sound.file.1','','','lineedit'),
    (0,'gesture action option drag include movement before detection',NULL,0,0,'','','','lineedit'),
    (0,'gesture action option press and tap use tapping finger',NULL,0,0,'','','','lineedit'),
    (0,'gesture action option tap click nearest',NULL,0,0,'','','','lineedit'),
    (0,'gesture action option two finger swipe left from right edge of screen reverse with reverse gesture',NULL,0,0,'','','','lineedit'),
    (0,'gesture action pinch and spread',NULL,0,0,'','','','lineedit'),
    (0,'gesture action tap',NULL,0,0,'','','','lineedit'),
    (0,'gesture action two finger swipe left from right edge of screen',NULL,0,0,'','','','lineedit'),
    (0,'gesture action two finger swipe right from left edge of screen',NULL,0,0,'','','','lineedit'),
    (0,'gesture allowswitchinggesturesforsamefingers',NULL,0,0,'','','','lineedit'),
    (0,'gesture drag pixel threshold',NULL,0,0,'','','','lineedit'),
    (0,'gesture gesture detection sensitivity',NULL,0,0,'','','','lineedit'),
    (0,'gesture hide cursor during touches',NULL,0,0,'','','','lineedit'),
    (0,'gesture jittersmoothing',NULL,0,0,'','','','lineedit'),
    (0,'gesture pinch spread separate',NULL,0,0,'','','','lineedit'),
    (0,'gesture rotate left right separate',NULL,0,0,'','','','lineedit'),
    (0,'gesture three finger double tap enabled',NULL,0,0,'','','','lineedit'),
    (0,'gesture use four finger swipes',NULL,0,0,'','','','lineedit'),
    (0,'usb.enum_time_secs',NULL,1,0,'Sets the frequency at which usb will check for device changes','','10','lineedit'),
    (0,'notification.prefix',NULL,0,0,'Prefix shown in connect / disconnect tray notifications','','UPDD device','none'),
    (0,'bundle.customisation',NULL,0,0,'Define software characteristics for a bindle','','','label'),
    (0,'gesture swipe threshold factor',NULL,0,0,'Special setting used for Neonode','','','lineedit'),
    (0,'gesture three plus finger strength factor',NULL,0,0,'Special setting used for Neonode','','','lineedit'),
    (0,'watchdog.events',NULL,0,0,'','','','none'),
    (0,'gesture enable scroll momentum boost',NULL,0,0,'Meant to be used specifically with AirBar sensor -- improves calculations of scrolling momentum','','','lineedit'),
    (0,'gesture enable lenient edge swipe',NULL,0,0,'Meant to be used specifically with AirBar sensor -- improves detection of notification center gesture','','','lineedit'),
    (0,'gesture action three finger squeeze and splay',NULL,0,0,'Gestures setting','','','lineedit'),
    (0,'gesture three finger squeeze splay separate',NULL,0,0,'Gesture setting','','','lineedit'),
    (0,'gesture ignore stylus0',NULL,1,0,'','','0','lineedit'),
    (0,'gesture override swipe between pages',NULL,1,0,'','','0','lineedit'),
    (0,'gesture override swipe between pages value',NULL,1,0,'','','0','lineedit'),
    (0,'uinput.multi_touch',NULL,1,0,'If on (1) this option causes the driver to send multi touch events to the kernel. 
It should not normally be necessary to change this setting, but it is available for cases where multi touch events interfere with regular touch,
 especially on older kernels with no; or incomplete support for multi touch. . 
Linux documentation suggests that multi-touch events should be ignored by an older kernel that does not recognise them.  
This setting is to cater for cases where this is not the case. 

A driver restart is required to recognise a change to this value','','0','check'),
    (0,'uinput.sleep_us',NULL,1,0,'Some implementations of the Linux touch interface are sensitive to timing and require a short pause between each passed event. 
This setting allows the delay to be defined in microseconds. A setting of 0 disables this feature.','','200','lineedit'),
    (0,'systemtray_icon_registration_only',NULL,1,0,'If set (1) shows the registration option only in system tray and only until registered','','0','none'),
    (0,'register.show.auto_order',NULL,1,0,'Customises the Register dialog 

If set (1) the Automatic Order option is shown','','1','none'),
    (0,'register.show.claim',NULL,1,0,'Customises the Register dialog 

If set (1) the Cliam License Key option is shown','','1','none'),
    (0,'register.show.offline',NULL,1,0,'Customises the Register dialog 

If set (1) the Offline option is shown','','1','none'),
    (0,'register.show.enter_license',NULL,1,0,'Customises the Register dialog 

If set (1) the Enter a Licence Key option is shown','','1','none'),
    (0,'status.show_screen_name',NULL,1,0,'Customises the Status dialog 

If set (1) the Screen name column is shown','','1','none'),
    (0,'appdir.mac',NULL,0,0,'Determines the target folder to install UPDD applications to on Mac','','/Applications/Utilities','none'),
    (0,'force_wisptis',NULL,1,0,'If set (1) then UPDD will attempt to coerce the Windows pen / tablet input system to recognise monitor layout changes 

This setting is only effective in Windows 7. In other cases a rboot will be required.','','1','check'),
    (0,'gesture web browser disable smart zoom',NULL,0,0,'When set to 1 will prevent double tapping from triggering smart zoom in web browser mode.

The browser application should be added to the gesture list of web browsers.','','','lineedit'),
    (0,'gesture accessibility disabled signal',NULL,0,0,'Used by Gestures to signal the AirBar preference pane that Gestures hasn''t been given permission to use accessibility features. I don''t think there''s any reason to have it in webtba3 as it doesn''t affect Gestures'' behavior and shouldn''t ever be set to 1 by anything other than Gestures itself.','','','lineedit'),
    (0,'gesture action option press click length',NULL,0,0,'','','','lineedit'),
    (0,'gesture reset mouse position',NULL,0,0,'','','','lineedit'),
    (0,'touches_enabled',NULL,0,0,'Used by gestures to globally disable touch input as delivered on the API','','','none'),
    (0,'stylus_enabled',NULL,0,0,'Used by gestures to globally disable stylus input as delivered on the API','','','none'),
    (0,'minimum_notify_level',NULL,0,0,'UPDD notifications have 3 levels as defined in upddapi.h 

#define NOTIFY_LEVEL_OTHER 0
#define NOTIFY_LEVEL_CONFIG_WARNINGS 1
#define NOTIFY_LEVEL_EVAL_AND_CRITICAL 2

By setting this value you can suppress certain notifications. Only those greater or equal in value to this setting are shown

Valid values are 0,1,2 i.e. evaluation and critical messages can not be disabled. 

NOTIFY_LEVEL_OTHER is for general status messages EG device connect / disconnect. 

NOTIFY_LEVEL_CONFIG_WARNINGS is used to inform when user intervention might be needed for a configurartion setting EG Configure Required, Reboot required

NOTIFY_LEVEL_EVAL_AND_CRITICAL informs when evaluation limites are exceeded or there is a critical issue blocking the operation of the driver (currently only if a MacOS/X KEXT can not be loaded).','0-2','0','spin'),
    (0,'gesture mouse min y',NULL,0,0,'Gesture setting

To use this feature, set global setting  "gesture mouse min y" to an integer value, e.g.:
upddutils nodevice "gesture mouse min y" 4

A value of 4 should prevent UPDD Gestures from triggering the menu bar in a full screen app, provided that app is running on the primary monitor.

If it''s running on a secondary monitor then the setting should be set to global Y coordinate of the top of that monitor plus 4. (Note that the top of the primary monitor always has a Y coordinate of 0, hence the value of 4 will always work for it.)','','','lineedit'),
    (0,'gesture mouse wiggle duration',NULL,1,0,'Gestures Setting

When set to a value of 1 or higher, will cause mouse cursor to move to a far corner of the screen before any mouse actions. The setting defines how many milliseconds the cursor will stay there. Intended to fix clicking issues in Microsoft PowerPoint.','','','lineedit'),
    (0,'xhost.enable',NULL,0,0,'When using xtouch the driver needs permission to open an interface to X.

In normal operation UPDD Daemon will execute the command 

xhost <value of xhost.enable>

this grants permission to processes already having root privileges on the localhost system to access the X session in which UPDD Daemon is running. 

We consider this to be reasonably secure; but in a secure environment if you need to use a different policy then you can change this setting to define an alternate policy','','SI:localhost:root','lineedit'),
    (0,'configure.invokes_calibrate',NULL,1,0,'Defines the calibration action at the end of the screen identification phase of configure 

always - calibration is always invoked
auto - calibration is invoked in the case where the touch indicated calibration is inaccurate, or configure does not change the monitor assignments (i.e. second run)
never- calibration is never invoked','always
auto
never','auto','none'),
    (0,'disable_initial_claim_device',NULL,1,0,'** Experimental setting **

At startup a global claim device is performed

    // on Windows this will force a re-enumeration to pick up dangling devices
    // on Mac it will reset controlled devices 

Setting this to 1 will suppress this operation','','0','check'),
    (0,'autoload_settings.path',NULL,0,0,'Specifies the full path to a file containing dumped settings

This file should be prepared with the command 

upddutils dumpsettings 

When the driver starts, if a file exiists at the location identified by this setting; and autoload_settings.done is not "1" the setttings are loaded from the referenced file and autoload_settings.done is set to 1','','','label'),
    (0,'autoload_settings.done',NULL,1,0,'If set (1) indicates that the settings have been autoloaded. See autoload_settings.path','','0','none'),
    (0,'toip.routing',NULL,0,0,'This is a global (nodevice) setting

A list of routes, one per line. A route comprises the following 

<source monitor or segment>;<target computer>;<target device>

To enter a multi line value on the command line use \n to identify the separate lines 

Target computer can be the network name or IP address  of the target computer 

For example

1:2;192.168.0.10;2
1:1;192.168.0.9;1

This will take touches on monitor 1, segment 2 and direct them to the device with handle 2 on computer with the address 192.168.0.10 and touches on monitor 1, segment 1 to the device with handle 1 on computer with the address 192.168.0.9

Note that if this setting has a value then local touches are disabled. This behavior can be overridden with the local option eg 

1:2;192.168.0.10;2
1:1;192.168.0.9;1
local 


or by using the local computer name for fine grained control eg  

1:2;192.168.0.10;2
1:1;192.168.0.9;1
1:3;localhost;3','','','lineedit'),
    (0,'toip.client',NULL,0,0,'This is a global (nodevice) setting

This is a boolean value (0=false 1 = true). 

A value of 1 indicates that this computer is acting as a toip client. Ie it expects to receive touches from another computer or computers. This opens the driver?s TCP/IP port for non-local connections. 
NB firewall settings will need to be reviewed both to allow the connection from other expected computers and disallow connections from elsewhere.','','','lineedit'),
    (0,'propagate.touch_interface',NULL,1,0,'If set (1) then changes to the Touch interface in the settings dialog affect all devices. 
Newly connected devices will also utilse the same touch interface','','0','check'),
    (0,'touch_interface_locked',NULL,1,0,'If set (1) then the touch interface option in settings dialog can not be changed','','0','none'),
    (0,'startup.jiggle_pointer',NULL,1,0,'If set to a non zero value, at each start of UPDD Daemon (system tray daemon mode) the system pointer will be moved the specified number of pixels either side of the current system pointer position and then returned to the current position.','','0','lineedit'),
    (0,'monitorsetupmetrics.manual',NULL,1,0,'If true (1) then the setting monitorsetupmetrics is not updated automatically; allowing it to be set manually(overridden).','','0','check'),
    (0,'gnome_default_touch_cursor_behaviour',NULL,1,0,'This setting is only effective when the Gnome desktop manager is in use.

If 1 then the default behaviour of the Gnome desktop for touch cursor is enabled. Generally this will mean that the curosr is hidden on touch. 
If 0 then the default behaviour of the Gnome desktop for touch cursor is disabled. Generally this will mean that the curosr is shown on touch. 
If blank then the default behaviour of the Gnome destop for touch cursor is not changed. 

This setting is effective on a reboot.','','','lineedit'),
    (0,'upddvh.keep_alive',NULL,1,0,'Inject data packets into Windows  to prevent pen up and allow for right click on Delta mode or slow controllers 
Default is on (1).
Set to 0 to disable','0
1','1','check'),
    (0,'key.total_number_of_licenses',NULL,0,0,'','','','none'),
    (0,'key.important','[0] This software is licensed software and is licensed to the company shown above. Please enter the supplied registration key to unlock the software. ',0,0,'','','','none'),
    (0,'keys.name',NULL,0,0,'','','','none'),
    (0,'keys.start_date',NULL,0,0,'','','','none'),
    (0,'key.note',NULL,0,0,'','','','none'),
    (0,'keys.email',NULL,0,0,'','','','none'),
    (0,'calibration.force_geometry',NULL,0,0,'By default UPDD uses the screen geometry to determine the placement of the calibration window, except on Linux where the available geometry (the screen geometry minus menu bar and similar areas) is used.

This setting allows the non-default option to be used. 
For example on a Windows system with an unusual configuration we once found that the available geometry had to be used.','available
screen','','check'),
    (0,'uinput.device_name',NULL,0,0,'Specifies an alternate name for the virtual device created by uinput','','','lineedit'),
    (0,'adonit_stylus',NULL,1,0,'When set to 1, switches UPDD Gestures / UPDD Commander to Adonit tablet behavior','customisation=adonit','0','lineedit'),
    (0,'adonit_stylus_eraser_enabled',NULL,1,0,'Enables eraser functionality for Adonit devices','customisation=adonit','1','lineedit'),
    (0,'adonit_stylus_barrel_button_enabled',NULL,1,0,'Enables barrel button right-click functionality for Adonit devices','customisation=adonit','','lineedit'),
    (0,'adonit_stylus_right_click_threshold',NULL,1,0,'','customisation=adonit','','lineedit'),
    (0,'usb.enum_delay_after_force_claim',NULL,1,0,'Number of seconds to wait before re-enumeration after a forced claim of a device.','','5','lineedit'),
    (0,'monitor.mapping_event',NULL,1,0,'In Windows a monitor mapping operation associates a virtual touch device with a physical monitor. 
This is so that when using the HID touch mode touches can be directed to the correct monitor without additional manual configuration.
To achieve this a fake touch has to be generated on each monitor in turn. 
In some cases this is undesirable. This setting offers some control over when this operation occurs 

0 - never 
1 - once only at installation time 
2 - as required','0
1
2','2','combo'),
    (0,'disable_error_collection',NULL,0,0,'If set (1) exception logs are not collected','','0','none'),
    (0,'no_upddvh',NULL,1,0,'Windows only

If set (1) the upddvh virtual hid interface is not installed. Onlymouse mode willl be available.','0
1','0','lineedit'),
    (0,'usb.use_updd_kernel_driver',NULL,1,0,'An experimental setting to allow tbupddsu to be used as the USB interface instead of libusb

If set (1) the installer will install a driver package upddusb which loads tbupddsu as the usb function driver. 

Normally this will be set at release time. If changed after installation you must stop the UPDD service, delete the installed devices under UPDD Devices in the device manager and restart the UPDD service. 

**Not all UPDD features are expected to work in this mode.**','0
1','0','none'),
    (0,'upddvh.keep_alive_interval_ms',NULL,1,0,'Specifies the time interval upon which to inject keepalive packets when using upddvh.keep_alive','','15','lineedit'),
    (0,'usb.detach_on_sleep',NULL,0,0,'If set (1) then when a system goes to sleep all pending USB io is cancelled and usb resources detached. 
This was implemented to deal with a specific usb over ip extender that would fail otherwise','0
1','0','check'),
    (0,'upddcommander.applicationsettings.count',NULL,0,0,'','','','none'),
    (0,'default_locale',NULL,0,0,'','<system>
cs_cz
da_dk
de_de
en_us
es_es
fi_fi
fr_fr
hu_hu
it_it
ja_jp
nb_no
nl_nl
pl_pl
pt_br
ru_ru
sv_se
tr_tr
zh_hant
zh_hans','en_us','combo'),
    (0,'upddcommander.applicationsettings.show_system_tray_icon',NULL,0,0,'','0
1','','lineedit'),
    (0,'upddcommander.applicationsettings.reset_cursor_after_action',NULL,0,0,'','0
1','','none'),
    (0,'usb.abort_on_disconnect',NULL,1,0,'If set (1), when a USB device is disconnected the driver process will terminate with an exit code of -16
This is useful in environments where device reconnects are not recognised by a running process. 
A wrapper script can launch the driver and re start it inthe event of exit code of -16 

For systems using systemV the UPDD install / run scripts implement this approach by default.','0
1','0','check'),
    (0,'usb.abort_on_nodevice',NULL,1,0,'If set (1), when no supported USB device is connected the driver process will terminate with an exit code of -16
This is useful in environments where device connects are not recognised by a running process. We have seen this specifically on Puppy Linux 
A wrapper script can launch the driver and re start it in the event of exit code of -16 

For systems using systemV the UPDD install / run scripts implement this approach by default.

NB the driver will repeatedly restart if this setting is set and no supported device is connected. 
This is intended mainly to provide resilience to disconnects rather than a hot plug solution.','0
1','0','check'),
    (0,'upddcommander.applicationsettings.touch_click_nearest',NULL,0,0,'','0
1','','lineedit'),
    (0,'upddcommander.applicationsettings.hide_cursor_during_touches',NULL,0,0,'','0
1','','none'),
    (0,'firmware_page',NULL,0,0,'Defines a firmware page to be shown in the console','','','label'),
    (0,'console.hideoption.touch',NULL,1,0,'If set (1) the touch option is not shown in the console','','0','none'),
    (0,'console.hideoption.calibration',NULL,1,0,'If set (1) the about calibration is not shown in the console','','0','none'),
    (0,'console.hideoption.toolbars',NULL,1,0,'If set (1) the toolbars option is not shown in the console','','0','none'),
    (0,'console.hideoption.firmware',NULL,1,0,'If set (1) the firmware option is not shown in the console','','0','none'),
    (0,'console.hideoption.advanced',NULL,1,0,'If set (1) the advanced option is not shown in the console','','0','none'),
    (0,'console.hideoption.devices',NULL,1,0,'If set (1) the device option is not shown in the console','','0','none'),
    (0,'console.hideoption.about',NULL,1,0,'If set (1) the about option is not shown in the console','','0','spin'),
    (0,'console.hideoption.11ptcal',NULL,1,0,'If set (1) the 11 point calibration option is not shown in the console','','1','none'),
    (0,'uinput.single_touch.mouse',NULL,1,0,'By default the uinput virtual device implements BTN_TOUCH to represnt the contact (touching) state. 
Setting this value (1) select BTN_LEFT instead. This was found to be required on Alpine.','','0','check'),
    (0,'uinput.single_touch.range',NULL,1,0,'By default the uinput virtual device has a co-ordinate range 0-32767. 
This can be altered with this setting. A value of 4095 was required for Alpine linux','1-65535','32767','spin'),
    (0,'upddcommander.applicationsettings.press_visual_feedback',NULL,0,0,'','0
1','','none'),
    (0,'calibration_cancel',NULL,1,0,'Show a cancel button at the end of calibration at same time as confirm button

Only effective if confirm_calibration is on

Note this is not a commonly used setting, it should only be used in situations where the button will fit in the calibrated segment','','0','check'),
    (0,'calibration_confirm_text',NULL,1,0,'Show the text "Please press the button above to confirm calibration" when the confirm calibration button is visible

Note this is not a commonly used setting, it should only be used in situations where the text will fit in the calibrated segment','','0','check'),
    (0,'console.hideoption.touch_devices',NULL,1,0,'If set (1) the touch devices option is not shown in the console, the fetching of the database from server disabled and the model names column in USB devices is removed','','','none'),
    (0,'skip_os_version_check',NULL,1,0,'By default each time UPDD Daemon starts the installled OS version is checked and if it differs from that seen at the last check a warning notification is given. 
If set (1) this caused the check to be skips and this supresses the notification.','','1','check'),
    (0,'upddcommander.applicationsettings.hide_default_presets',NULL,1,0,'When 1, hides the default presets in the application settings','0
1','','none'),
    (0,'upddcommander.applicationsettings.hide_tuio_settings',NULL,1,0,'When 1, hides the TUIO settings section in UC''s application settings','0
1','','none'),
    (0,'upddcommander.applicationsettings.hide_touch_gestures_settings',NULL,1,0,'When 1, hides the touch gesture settings section in UC''s application settings','0
1','','none'),
    (0,'updd_commander_run_after_install',NULL,1,0,'On Windows, if this setting has a value of 1, UPDD Commander will run and set itself up as a startup item after installation. On macOS this setting has no effect.','0
1','0','label'),
    (0,'console.hideoption.check_for_updates','1',1,0,'If set (1) the check for updates option is not shown in the console','','0','none'),
    (0,'use_native_screen_rotation',NULL,1,0,'This option allows for the default rotate implementation to be changed.  Currently this only has any effect when Windows 10  is used with the Touch interface (virtual HID). 
Windows 10 HID supports rotation directly so when a touch device is rotated it is not necessary for UPDD to adjust the co-ordinates delivered to HID. In such a case use_native_screen_rotation should be set to 1 (the default). However some 3rd party video drivers behave differently and require UPDD to implement the co-ordinate mapping required for rotation. Setting use_native_screen_rotation to 0 enables this behaviour.','0
1','1','check'),
    (0,'startup.disable_touch_until',NULL,0,0,'At driver start, indicates when the global enabled setting is set (it has an implied default of 1. i.e.if not set the software acts as though it is 1)
''client'' the "enabled" setting is set to true when the first client connection is made (e.g. when UPDD daemon starts)
A ''numeric value'' the "enabled" setting is set to true after the defined number of seconds has elapsed.
Any ''other value'' the "enabled" setting is set to false preventing any touches. In this case "enabled" must be set by some external means, such as ''upddutils nodevice set enabled 1''','','','lineedit'),
    (0,'upddcommander.applicationsettings.enable_mouse_emulation',NULL,0,0,'','0
1','','none'),
    (0,'upddcommander.applicationsettings.disable_gesture_api',NULL,0,0,'Under Windows, making this call affects touch performance.

If set, don''t call TBApiPostPointerEvent.

MacOS - default 0
Windows - default 1','0
1','','none'),
    (0,'console.show_languages',NULL,0,0,'Controls which languages are available in the console. A blank value indicates all available. 

a value of "none" removes the option from the console 

a multi line list of locale codes or <system>  indicates that only the listed languages are shown in the console selection list

EG 

<system>
en_us
ja_jp','','','none'),
    (0,'segmentation.force_geometry',NULL,0,0,'see calibration.force_geometry 

This setting allows for a different option to be used for the placement of a segment within a window. If set calibration.force_geometry is used for the window geometry and this value for the segment positioning. 

In builds < 6.0.655 this had to be set explicitly
In builds >= 655 if this is not set the value of calibration.force_geometry  is used for window and segment placement.','screen
available','','lineedit'),
    (0,'upddcommander.applicationsettings.enable_reset_buttons',NULL,1,0,'When 1, enables reset buttons to appear the Gesture and Touch Behaviour tabs of UC''s application settings.','0
1','','label'),
    (0,'upddcommander.applicationsettings.drag_distance',NULL,1,0,'This is the application-wide setting that determines how many pixels a gesture must travel for it to be detected as a drag gesture
Applies to all gestures across all applications. (Can be overridden on a per-gesture basis in a specific gesture''s settings)','','10','label'),
    (0,'console.hideoption.usb_devices',NULL,1,0,'If set (1) the usb devices option is not shown in the console','','0','none'),
    (0,'notify.oschange.msg',NULL,0,0,'If a change in the installed operating system version is detected a notification (toast) message is given. 

Entering a value for this setting allows the message to be customised

Furthermore if a valid URL is specified in notify.oschange.link.mac for MacOs or notify.oschange.link.win for Windows clicking the message opens that link

note - the link is not displayed in the Notification.

If a link is used the msg should be changed as appropriate e.g

Change of OS version, UPDD update may be required. Click here for download. 
Change of OS version, UPDD update may be required. Click here for more info.','','','none'),
    (0,'notify.oschange.link.win',NULL,0,0,'See notify.oschange.msg','','','none'),
    (0,'notify.oschange.link.mac',NULL,0,0,'See notify.oschange.msg','','','none'),
    (0,'linux_display.1',NULL,0,0,'see http://support.touch-base.com/Documentation/50496/Manual-configuration-using-Xtouch','','','lineedit'),
    (0,'linux_display.2',NULL,0,0,'See http://support.touch-base.com/Documentation/50496/Manual-configuration-using-Xtouch','','','lineedit'),
    (0,'mouse.tether_to_monitor',NULL,0,0,'Windows only setting. 

Specify a UPDD monitor number in this setting to tether the system mouse pointer to that monitor. 
This can be useful when touches are delivered via the api (not the mouse or touch interface).
This setting takes effect on a restart of UPDD Daemon 
If the mouse pointer is outside the area of the specified monitor when UPDD Daemon starts it is moved to the centre of that monitor.','','0','spin'),
    (0,'mouseport.enable',NULL,1,0,'Internal use only','0
1','1','none'),
    (0,'log.periodic_diagnostic_minutes',NULL,1,0,'If set to a non zero value then UPDD will perform a non-interactive diagnostic dump periodically at an interval of the number of minutes given in this setting. 

The dumps will be written to the logged in user''s Desktop folder in a sub folder updd_diagnostics 

NB this can create a lot of data specially if a small interval is used 

A change of this setting requires a restart of UPDD Daemon to become effective','','0','spin'),
    (0,'log.periodic_diagnostic_folder',NULL,0,0,'Specifies an alternate folder to deliver content generated by the periodic_diagnostic function see  log.periodic_diagnostic_minutes


There is an implied default of %DESKTOP%','','','label'),
    (0,'log.periodic_diagnostic_retention_days',NULL,1,0,'Specifies a retention period for content generated by the periodic_diagnostic function see  log.periodic_diagnostic_minutes','','','label'),
    (0,'use_os_connector',NULL,0,0,'Enables an alternate OS interface framework','','','label'),
    (0,'upddcommander.applicationsettings.extra_touch_logging',NULL,1,0,'When 1, UC will print extra information when it detects a new touch has been pressed','0
1','','label'),
    (0,'disable_all_claim_device',NULL,1,0,'','0
1','0','check'),
    (0,'mouse.tether_applications',NULL,1,0,'Windows only setting. 

Used in conjunction with mouse.tether_to_monitor

When set (1) and mouse.tether_to_monitor is defined, any applications on the monitor specified in mouse.tether_to_monitor are blocked from being dragged off of that monitor using the mouse. 

A restart of the daemon process is required to make this setting effective','0
1','0','check'),
    (0,'upddcommander.applicationsettings.tuio_use_websockets',NULL,0,0,'','0
1','1','lineedit'),
    (0,'primary_is_whole_desktop',NULL,1,0,'Windows 10 in some cases bases co-ordinates on the primary monitor and in others as the intersection of all monitors. 
UPDD attempts to determine the appropriate mode but in some cases this is not determined correctly. 
This setting allows UPDD behaviour to be set explicitly.
 A value of 0 indicates that the co-ordinate system is based on primary monitor a value of 1 indicates the intersection of all monitors.

This setting does not have a default value, the defualt behaviour depends on the Windows build number and patch level.','','','label'),
    (0,'autoshow.touch.keyboard',NULL,1,0,'','','','check');
/*sep*/

delete from updd_setting where name like 'registration.%' or name like 'license.%' or name in ('cryptographic_check','number_of_devices','number_of_controllers','build_level','sent_to','release');
/*sep*/

insert into updd_setting (id_updd_controller,name,value,is_int,is_connection_specific, help_text)
VALUES
    (0,'cryptographic_check','Y2lIJGLV2fY2uGFqmuOspgVnHFBtBy10Okeea7BmSfI=',0,0,''),
    (0,'registration.cryptographic_check','Sey5ZYNeSdLxsBcprY5F2nqB5xP7xpJ/ExqgM7XOlvc=',0,0,''),
    (0,'number_of_devices','0',1,0,''),
    (0,'number_of_controllers',11,1,0,''),
    (0,'build_level','Alpha',0,0,''),
    (0,'registration.installable_until','2022-11-15',0,0,''),
    (0,'registration.support_until','2022-11-15',0,0,''),
    (0,'registration.email','',0,0,''),
    (0,'registration.is_eval','0',1,0,''),
    (0,'license.authentication_method','none',0,0,''),
    (0,'license.authentication_data','',0,0,''),
    (0,'license.type','permanent',0,0,''),
    (0,'license.company','GoldFinger Monitors',0,0,''),
    (0,'license.bundle','Permanent - GoldFinger Monitors - 15112021',0,0,''),
    (0,'license.id_bundle','303',0,0,''),
    (0,'license.eval_click_limit','100',0,0,''),
    (0,'sent_to','',0,0,''),
    (0,'release','1649537',0,0,'');
/*sep*/
CREATE TABLE `updd_history` (
`history` TEXT NOT NULL
); 
/*sep*/
insert into updd_history values( '<b>30 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Changes for license derivation <br>
<b>29 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Support HID devices with no contact ID<br>
<b>21 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Fix libusb with misbehaving USB hubs <br>
<b>21 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Fix broken rs232 reset<br>
<b>21 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Varius localisation changes<br>
<b>21 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Install changes for Commander<br>
<b>10 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug in pressure reports (controller specific) <br>
<b>10 Jun 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Miscellaneous changes to console<br>
<b>29 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Fixed silent crash in calibrate when no devices<br>
<b>29 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Selectability changes in console<br>
<b>29 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;USB / Touch devices in console<br>
<b>28 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Advanced touch page in console<br>
<b>28 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;EDID binding<br>
<b>28 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Support calibrate confirm text<br>
<b>28 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;upddutils some options gave incorrect return code <br>
<b>28 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Miscellaneous changes to console<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG TBApiGetMonitorMetricsForMonitor would crash when arg is out of range<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Identify prompt, link to support<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Mouse port was enabled when calibrating second of multiple devices<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Identify bug related to native screen identification<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Better indication of starting eval counts<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Prevent RDP connection messing up monitor metrics<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG TBApiGetMonitorMetricsForMonitor would crash when arg is out of range<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Identify prompt, link to support<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Mouse port was enabled when calibrating second of multiple devices<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Identify bug related to native screen identification<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Better indication of starting eval counts<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Prevent RDP connection messing up monitor metrics<br>
<b>15 May 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG TBApiGetMonitorMetricsForMonitor would crash when arg is out of range<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Edge calibration (<5% margin)<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Added diagnostics to console<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;High DPI support <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbar touch visualisation<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Interlock improvements<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration confirm text (optional) <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration cancel (optional) <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Prompt on language change<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Support cloned monitors<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG monitor binding with multiple monitors with same name; continuos refresh <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Edge calibration (<5% margin)<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Added diagnostics to console<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;High DPI support <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbar touch visualisation<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Interlock improvements<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration confirm text (optional) <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration cancel (optional) <br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Prompt on language change<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Support cloned monitors<br>
<b>27 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG monitor binding with multiple monitors with same name; continuos refresh <br>
<b>02 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Memory leak in rs232 <br>
<b>02 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Added 64bit CRT to installer<br>
<b>02 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Memory leak in rs232 <br>
<b>02 Apr 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Added 64bit CRT to installer<br>
<b>25 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Stop continual refresh on non-HID devices<br>
<b>25 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Language switching<br>
<b>25 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Improvements to Console Status<br>
<b>25 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Stop continual refresh on non-HID devices<br>
<b>25 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Language switching<br>
<b>25 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Improvements to Console Status<br>
<b>15 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbar settings presentation changes <br>
<b>15 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;W8 support (tbupddsu) <br>
<b>15 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration timeout device specific (was global) <br>
<b>15 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbar settings presentation changes <br>
<b>15 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;W8 support (tbupddsu) <br>
<b>15 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration timeout device specific (was global) <br>
<b>09 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;New console utility<br>
<b>09 Feb 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;New console utility<br>
<b>28 Jan 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Fixed termination crash in daemon<br>
<b>28 Jan 2020</b>&nbsp;&nbsp;&nbsp;&nbsp;Fixed termination crash in daemon<br>
<b>24 Dec 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New API TBApiGetSettingByIndex<br>
<b>20 Dec 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Mark device identified after monitor explicitly set<br>
<b>10 Dec 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Silent crash in registration dialog		<br>
<b>10 Dec 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Languages support<br>
<b>07 Dec 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;11 point calibration<br>
<b>21 Nov 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;RS232 binding change - allow change of com port<br>
<b>21 Nov 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Win 7 certficate changes<br>
<b>21 Nov 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Fix: liftoff tome of zero was not working<br>
<b>21 Nov 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Force com port name to upper case<br>
<b>21 Nov 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;new option serial_multi_touch<br>
<b>21 Nov 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Removed default logging in high throughput threads<br>
<b>29 Oct 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New option rs232.macro.keepalive<br>
<b>29 Oct 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Uninstall did not remove some kernel components <br>
<b>29 Oct 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Uninstall did not remove inf folder<br>
<b>23 Oct 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;W7 certification changes <br>
<b>10 Oct 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Added ignore option to HIDRD selection rule<br>
<b>02 Oct 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: interlock default should be none (was interlock) <br>
<b>23 Sep 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;XP support reinstated (specific builds only)<br>
<b>31 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Added notification if UPDDVH requires a reboot<br>
<b>31 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Virtual HID not functional when digimon does not exist (single monitor systems) <br>
<b>16 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG: Unexpected monitor detect cycle when dirver was restarted <br>
<b>16 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;HID support for single monitor was broken<br>
<b>16 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Multi touch aware liftoff ime<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Log size limits <br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Log to highlight eval expiry<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Allow deletion of OK devices<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Placement of UPDD Test screen when launched from menu<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbar active_whilst_calibrating setting<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbar hold_touch setting<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;upddutils remove for connection based settings<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Restart UPDD Daemon when primary monitor changes to get correct monitorsetupmetrics<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New option: upddutils monitorbind<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;OEM: Serial gestures<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG: blank monitorsetupmetrics at startup caused extra monitor checking <br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New certification management for win 7<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New upddvh implementation<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting upddvh.keep_alive_interval_ms<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Optionally use old (numeric) values for interactive_touch.latched<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration fix for large co-ordinate ranges<br>
<b>09 Aug 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Kernel NX pool changes for device guard<br>
<b>18 Jun 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Support for backupinterval=never<br>
<b>11 Jun 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Fixed crash in SendLegacyMacroSynchronous<br>
<b>11 Jun 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Mouse interface could lock up with MT touch screen that missed a lift event<br>
<b>11 Jun 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Support legacy settings for interactive touch<br>
<b>03 Jun 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;WHQL attestation signed kernel module and associated build / release / install changes<br>
<b>03 Jun 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Improved performance of virtual HID on slow machines<br>
<b>17 Apr 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New drag option for interactive touch <br>
<b>17 Apr 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;New option interlock<br>
<b>27 Mar 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;UPDD Daemon icon option menu was not working<br>
<b>23 Mar 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;UPDD Daemon icon option menu was not working<br>
<b>23 Mar 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Disallow unregister of permanent license<br>
<b>23 Mar 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Improved assisted double click<br>
<b>23 Mar 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Better dynamic monitor binding<br>
<b>21 Jan 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Improvements to dynamic monitor binding, especially for mirrored mode<br>
<b>18 Jan 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Improved assisted_double_click, ignore motion during detection phase<br>
<b>01 Jan 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Dynamic monitor binding <br>
<b>01 Jan 2019</b>&nbsp;&nbsp;&nbsp;&nbsp;Check for updates <br>
<b>29 Dec 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;OSD utility for Mitsubishi<br>
<b>08 Oct 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New API TBApiCalibrate<br>
<b>08 Oct 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New API TBApiGetSettingHelp<br>
<b>08 Oct 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New API TBApiGetSettings<br>
<b>05 Oct 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Toolbars support<br>
<b>12 Sep 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;w32_events support<br>
<b>04 Sep 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Supported option in settings<br>
<b>04 Sep 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Key based licensing<br>
<b>23 Aug 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Improved HID monitor association<br>
<b>03 Aug 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New upddutils option: bootlog<br>
<b>27 Jul 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;propagate.touch_interface<br>
<b>27 Jul 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Screen resolution binding<br>
<b>26 Jul 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New options set+ set- <br>
<b>10 Jul 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Support calibrate for modes other than click and drag<br>
<b>10 Jul 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Monitor span<br>
<b>09 Jul 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Touch over IP<br>
<b>22 Jun 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;FIX: Rotated calibration issue<br>
<b>22 Jun 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New option; setup -r<br>
<b>22 Jun 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Hardware error reset failure <br>
<b>29 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Rename device option in settings<br>
<b>26 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Added test option to settings dialog <br>
<b>24 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Problem with inverted screens and new calibration algorithms <br>
<b>24 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New api TBApiGetSettingSize<br>
<b>18 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Offline registration with licence now supported<br>
<b>18 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;High DPI support<br>
<b>09 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibrate / Configure and Manual options on settings dialog <br>
<b>08 May 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New settings dialog<br>
<b>26 Apr 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Uninstall now removes devices when user is not admin<br>
<b>16 Apr 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting ignore_multi_touch<br>
<b>16 Apr 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;4 / 9 / 25 point calibration options + variable margin<br>
<b>07 Apr 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;new upddutils option remove and new api TBApiRemove<br>
<b>05 Apr 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;32 Bit UPDD VH fixes<br>
<b>03 Apr 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Unregister now releases licence at the server. <br>
<b>16 Mar 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New option: touchdown_filter<br>
<b>15 Feb 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;ENH: Better multi monitor management <br>
<b>29 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;ENH: W10 Fall edition support <br>
<b>16 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Daemon shows explanation in tooltip for error status<br>
<b>16 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Configure notification<br>
<b>16 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New option: upddutils licence<br>
<b>16 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;New option: upddutils register<br>
<b>16 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Improved monitor binding<br>
<b>16 Jan 2018</b>&nbsp;&nbsp;&nbsp;&nbsp;Better support for virtual devices<br>
<b>13 Dec 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Window 10 Fall Edition tbupddsu mode multi monitor support<br>
<b>08 Dec 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Z processing changes<br>
<b>28 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG: serial device in supported list stopped recognition of usb devices after it in list<br>
<b>27 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Warn user if configure needed via notification. <br>
<b>27 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;FIX: Monitor binding to multiple monitors of same type was not always correct<br>
<b>27 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Crash in notification window fixed<br>
<b>23 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;UPDD generated notifications<br>
<b>15 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;upddutils connections now only shows connected devices<br>
<b>09 Nov 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Improved monitor binding<br>
<b>17 Oct 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting calibration_min_delta<br>
<b>17 Oct 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Delete NOK device option in status<br>
<b>17 Oct 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Confirm calibration option<br>
<b>28 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Fix - first time configure single monitor system<br>
<b>28 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Native sound support<br>
<b>28 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Asian characters in status<br>
<b>13 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;MAC* Improved Retina display support <br>
<b>13 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New click mode (3) No Click<br>
<b>13 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option interactive_touch.latched<br>
<b>13 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Uninstall removes device instances and reinstates HID<br>
<b>13 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Configurable purchase dialog <br>
<b>04 Sep 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New Feature: assisted double click<br>
<b>25 Aug 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New feature Monitor Binding <br>
<b>23 Aug 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Extended unregister information<br>
<b>23 Aug 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Interim fix for upddvh interface on W7 32 bit<br>
<b>21 Aug 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;renamed updd.raw to updd.raw.txt<br>
<b>16 Aug 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option systemtray_icon_registration_only<br>
<b>14 Aug 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New daemon options, history, about,register, status, notificationarea<br>
<b>31 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option hid.manual_report_id<br>
<b>31 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;EEPROM changes to support new multi point calibration<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration timeout<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Crash in multithreaded SQL<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Crash in IsDeviceConnected<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Revamped rotate to resolve issue with swapxy controlers<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Improve API performance cleint to driver messages<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Fix: ignore_tip_switch with liftoff timer was unreliable<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added monitors and version to diagnostics<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added port info to status dialog<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Promote status / about dialog if already active<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Add a second device did not work<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Better diagnostics images<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Diagnostics: filedebug 3 was not working on non-Windows<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Parser change for nested applications<br>
<b>30 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Support for rs232 asciimode<br>
<b>10 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New bootstrap setting dumphid<br>
<b>10 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Fix - add adhoc devices only allowed one device. <br>
<b>07 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New support feature "Diagnostics"<br>
<b>03 Jul 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Serial (rs232) support<br>
<b>14 Jun 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;A newly plugged device did not bind to an unbound device instance (created by adddevice)<br>
<b>14 Jun 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: usbstring validation was not working<br>
<b>06 Jun 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Windows 10 rotated calibration support<br>
<b>04 Jun 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting ignore_tip_switch<br>
<b>04 Jun 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Disabled option in daemon menu<br>
<b>13 May 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG: hybrid packet support did not work in some scenarios<br>
<b>10 May 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New API TBApiInjectTouchEx<br>
<b>10 May 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Framework based eeprom calibration support<br>
<b>10 May 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;EEPROM framework support (read / write data)<br>
<b>07 May 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New Feature: upddutils hidmode<br>
<b>28 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Release number in about<br>
<b>28 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Complete rotate support. Tested on Windows and MAC, untested on Linux<br>
<b>28 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option contact_timeout_secs<br>
<b>18 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Automatic Identify in multi segment single monitor system<br>
<b>17 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Reinstated upddutils calibrate<br>
<b>10 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New menu option "Annotate"<br>
<b>09 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Install now overwrites settings database in W10<br>
<b>09 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Installer waits for device installation<br>
<b>09 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New feature: click_mode<br>
<b>07 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New feature: sound on click<br>
<b>06 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option upddutils selftest<br>
<b>06 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Real time detection of USB devices<br>
<b>04 Apr 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option liftoff_ignore_coordinates<br>
<b>30 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option hide_systemtray_icon<br>
<b>30 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;HID  get / set feature in api and upddutils<br>
<b>25 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option: upddutils usbdevices<br>
<b>21 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Delete data folder on uninstall<br>
<b>21 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added a simple registry setting based support for calibrating whilst rotated<br>
<b>14 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added extended controller matching options BCDDEVICELO/HI<br>
<b>05 Mar 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: Register menu shown after a reboot when should be hidden<br>
<b>10 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Dual mode signing for better Windows 10 support<br>
<b>10 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New customisation to automatically trust Touch-base software - on per customer basis<br>
<b>10 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New non-msi installer<br>
<b>08 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: calibration screens incorrect in multi monitor and multi segment scenarios (result of earlier Linux offset change)<br>
<b>08 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New feature Anchor Mouse<br>
<b>07 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: 100% cpu condition for 3M PCT and other similar devices<br>
<b>03 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Correction to monitor_segment_map; was not working as documented<br>
<b>02 Feb 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Cosmetic: eval message was shown in status after registration with random numbers<br>
<b>31 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting "enabled"<br>
<b>31 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Offline registration<br>
<b>23 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: virtual hid in Windows 10 did not properly deal with layout changes<br>
<b>20 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New option for bindmode: BIND_USB_BCD <br>
<b>20 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting: hid.detect_hidrd_change<br>
<b>18 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: TBApiPostPointerEvent was not thread safe<br>
<b>13 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;New setting, liftoff_time_ms<br>
<b>13 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: supress irrelevant device disconnect messages<br>
<b>13 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: thread safety issue in api<br>
<b>12 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;upddutils events; added rawx/y info<br>
<b>12 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: crash in upddapi, AMFError thrown in get maxz<br>
<b>09 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Multi touch and monitor support on Windows 10<br>
<b>09 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Virtual HID suport now reconfigures after a display change event<br>
<b>09 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: stylus processing corrected for byte aligned values after byte 0<br>
<b>06 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: eval click counting was incorrect when > 256<br>
<b>06 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug:32 bit device installs failed<br>
<b>06 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: stylus processing not correct for some controllers<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Monitor segmentation support added<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added change history function<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: macros for interrupt writes did not work<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Uninstall replaces default drivers<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Included connection key in upddutils "get" results<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: devices with multipe HID interfaces seen as HID change thus forcing re-read of default calibration <br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added upddutils option "deldevice"<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: TBApiGetMaxZ gave wrong result<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added upddutils options "recordraw" and "playbackraw"<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Windows multi-touch support added<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Added upddutils option "events"<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Removed logo from uninstall<br>
<b>03 Jan 2017</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: Macro parser was sending extra request<br>
<b>07 Dec 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Improvements to HID parser, to support a wider range of controllers<br>
<b>04 Dec 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Plugging in a controller with different hid report descriptor, but same vid / pid resets stored values (ie calibration data) <br>
<b>30 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;The apikey authentication now works with new eval status reporting<br>
<b>30 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Bug: controllers where stylus bits not byte aligned were posting incorrect stylus data<br>
<b>28 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Predefined calibration will override that in hid report descriptor<br>
<b>24 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;BUG: corrected title for calibration dialogs<br>
<b>16 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Registration does not require a restart<br>
<b>16 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Eval notification did not fire in all cases<br>
<b>16 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Cosmetic changes re registration, show eval fields as approriate<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;The systray icon now shows ! when eval complete<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;TBApiGetMaxZ implemented (hid only)<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Inlcide device handles in status<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Show evaluation clicks / days left in status<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Added upddutils "unregister" option<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Full support for "offline" licensing<br>
<b>14 Nov 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Added updddutils option "setall"<br>
<b>12 Oct 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Puchase option was not shown for eval - registration builds<br>
<b>11 Oct 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;New API event CONFIG_EVENT_CONCURRENCY_CHANGE<br>
<b>11 Oct 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;New feature edge adjust<br>
<b>11 Oct 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Calibration margins can now be set to an arbitrary value<br>
<b>11 Oct 2016</b>&nbsp;&nbsp;&nbsp;&nbsp;Purchase option in system tray menu<br>
')